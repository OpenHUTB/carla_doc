{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nlet datas = [{\n  name: '语文',\n  value: 32\n}, {\n  name: '数学',\n  value: 69\n}, {\n  name: '英语',\n  value: 88\n}, {\n  name: '历史',\n  value: 70\n}, {\n  name: '地理',\n  value: 99\n}];\nlet yData = []; // y轴数据\nlet xName = []; // x轴名称\nlet max = 100; // 最大数值\nlet colorList = ['#00B386', '#3f76f2'];\nyData = datas.map(n => {\n  return n.value;\n});\ndatas.forEach(item => {\n  xName.push({\n    name: item.name,\n    max: max,\n    value: item.value\n  });\n});\n\n// 实现单个提示框方法\nconst buildSeries = function (data) {\n  const helper = data.map((item, index) => {\n    const arr = new Array(data.length);\n    arr.splice(index, 1, item);\n    return arr;\n  });\n  return [data, ...helper].map((item, index) => {\n    return {\n      type: 'radar',\n      symbol: 'circle',\n      symbolSize: 4,\n      // 原点大小\n      lineStyle: {\n        color: index === 0 ? colorList[0] : 'transparent'\n      },\n      areaStyle: {\n        color: colorList[0],\n        opacity: 0.6,\n        emphasis: {\n          color: colorList[0],\n          opacity: 0.6\n        }\n      },\n      tooltip: {\n        show: index === 0 ? false : true,\n        trigger: 'item',\n        formatter: function () {\n          return xName[index - 1].name + '：' + yData[index - 1] + '分';\n        }\n      },\n      z: index === 0 ? 1 : 2,\n      // 设置区域边框和区域的颜色\n      itemStyle: {\n        normal: {\n          // 点的样式\n          color: colorList[0],\n          opacity: 0\n        },\n        // 鼠标经过的\n        emphasis: {\n          show: index === 0 ? false : true,\n          // 某个点的样式\n          color: index === 0 ? '' : '#a3ffe7',\n          opacity: index === 0 ? 0 : 1,\n          // 中心点连接点的线条\n          lineStyle: {\n            color: index === 0 ? colorList[0] : '#a3ffe7',\n            opacity: index === 0 ? 1 : 0.2\n          }\n        }\n      },\n      data: [{\n        value: item,\n        label: {\n          show: false,\n          fontSize: 16,\n          position: 'right',\n          color: colorList[0],\n          formatter: function (params) {\n            return params.value;\n          }\n        }\n      }]\n    };\n  });\n};\noption = {\n  backgroundColor: '#000',\n  tooltip: {},\n  radar: {\n    splitNumber: 4,\n    // 中间辅助线\n    center: ['50%', '50%'],\n    // 图表位置\n    radius: '65%',\n    // 图表大小\n    // 设置雷达图中间射线的颜色\n    axisLine: {\n      lineStyle: {\n        color: 'rgba(242, 242, 242, .1)',\n        fontSize: 40\n      }\n    },\n    // 网格线\n    splitLine: {\n      lineStyle: {\n        color: 'rgba(242, 242, 242, .08)'\n      }\n    },\n    indicator: xName,\n    // 雷达图背景的颜色，在这儿随便设置了一个颜色，完全不透明度为0，就实现了透明背景\n    splitArea: {\n      areaStyle: {\n        // 图表背景的颜色\n        color: ['#555555', '#444444', '#333333', '#222222'],\n        shadowColor: 'rgba(0,0,0,.15)',\n        shadowBlur: 2\n      }\n    },\n    name: {\n      lineHeight: 18,\n      color: '#fff',\n      fontSize: 14,\n      formatter: labelName => {\n        return labelName;\n      }\n    }\n  },\n  // 标轴值\n  polar: {\n    radius: '65%'\n  },\n  angleAxis: {\n    zlevel: 0,\n    min: 0,\n    max: 360,\n    clockwise: false,\n    axisTick: {\n      show: false\n    },\n    axisLabel: {\n      show: false\n    },\n    axisLine: {\n      show: false\n    },\n    splitLine: {\n      show: false\n    }\n  },\n  radiusAxis: {\n    zlevel: 0,\n    min: 0,\n    max: 100,\n    interval: 25,\n    axisLabel: {\n      textStyle: {\n        color: '#AFAFAF',\n        fontSize: 10\n      }\n    },\n    axisLine: {\n      show: false\n    },\n    splitLine: {\n      show: false\n    },\n    splitArea: {\n      show: false\n    }\n  },\n  series: buildSeries(yData)\n};\nlet currentIndex = -1;\nsetInterval(() => {\n  let dataLen = option.series[0].data[0].value.length + 1;\n  // 取消之前高亮的图形\n  myChart.dispatchAction({\n    type: 'downplay',\n    seriesIndex: currentIndex,\n    dataIndex: 0\n  });\n  currentIndex = (currentIndex + 1) % dataLen;\n  // 高亮当前图形\n  myChart.dispatchAction({\n    type: 'highlight',\n    seriesIndex: currentIndex,\n    dataIndex: 0\n  });\n  // 显示 tooltip\n  myChart.dispatchAction({\n    type: 'showTip',\n    seriesIndex: currentIndex,\n    dataIndex: 0\n  });\n}, 2000);","map":{"version":3,"names":["echarts","datas","name","value","yData","xName","max","colorList","map","n","forEach","item","push","buildSeries","data","helper","index","arr","Array","length","splice","type","symbol","symbolSize","lineStyle","color","areaStyle","opacity","emphasis","tooltip","show","trigger","formatter","z","itemStyle","normal","label","fontSize","position","params","option","backgroundColor","radar","splitNumber","center","radius","axisLine","splitLine","indicator","splitArea","shadowColor","shadowBlur","lineHeight","labelName","polar","angleAxis","zlevel","min","clockwise","axisTick","axisLabel","radiusAxis","interval","textStyle","series","currentIndex","setInterval","dataLen","myChart","dispatchAction","seriesIndex","dataIndex"],"sources":["src/components/RightComponent/PredictionComparison/Comparison.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <div class=\"background-div02\" style=\"\">\r\n        <span style=\"color: rgb(0, 170, 255);\">|</span> <span style=\"color: rgb(172, 172, 172);\">仿真流量与真实流量对比</span>\r\n    </div>\r\n      <div\r\n        class=\"echart\"\r\n        ref=\"mychart\"\r\n        id=\"mychart\"\r\n        :style=\"myChartStyle\">\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n.background-div02 {\r\ntext-indent: 0.7em;\r\nbackground-color: #343434E6;\r\n}\r\n</style>\r\n\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\n\r\n\r\nlet datas = [\r\n  { name: '语文', value: 32 },\r\n  { name: '数学', value: 69 },\r\n  { name: '英语', value: 88 },\r\n  { name: '历史', value: 70 },\r\n  { name: '地理', value: 99 }\r\n];\r\nlet yData = []; // y轴数据\r\nlet xName = []; // x轴名称\r\nlet max = 100; // 最大数值\r\nlet colorList = ['#00B386', '#3f76f2'];\r\nyData = datas.map((n) => {\r\n  return n.value;\r\n});\r\ndatas.forEach((item) => {\r\n  xName.push({ name: item.name, max: max, value: item.value });\r\n});\r\n \r\n// 实现单个提示框方法\r\nconst buildSeries = function (data) {\r\n  const helper = data.map((item, index) => {\r\n    const arr = new Array(data.length);\r\n    arr.splice(index, 1, item);\r\n    return arr;\r\n  });\r\n  return [data, ...helper].map((item, index) => {\r\n    return {\r\n      type: 'radar',\r\n      symbol: 'circle',\r\n      symbolSize: 4, // 原点大小\r\n      lineStyle: {\r\n        color: index === 0 ? colorList[0] : 'transparent'\r\n      },\r\n      areaStyle: {\r\n        color: colorList[0],\r\n        opacity: 0.6,\r\n        emphasis: {\r\n          color: colorList[0],\r\n          opacity: 0.6\r\n        }\r\n      },\r\n      tooltip: {\r\n        show: index === 0 ? false : true,\r\n        trigger: 'item',\r\n        formatter: function () {\r\n          return xName[index - 1].name + '：' + yData[index - 1] + '分';\r\n        }\r\n      },\r\n      z: index === 0 ? 1 : 2,\r\n      // 设置区域边框和区域的颜色\r\n      itemStyle: {\r\n        normal: {\r\n          // 点的样式\r\n          color: colorList[0],\r\n          opacity: 0\r\n        },\r\n        // 鼠标经过的\r\n        emphasis: {\r\n          show: index === 0 ? false : true,\r\n          // 某个点的样式\r\n          color: index === 0 ? '' : '#a3ffe7',\r\n          opacity: index === 0 ? 0 : 1,\r\n          // 中心点连接点的线条\r\n          lineStyle: {\r\n            color: index === 0 ? colorList[0] : '#a3ffe7',\r\n            opacity: index === 0 ? 1 : 0.2\r\n          }\r\n        }\r\n      },\r\n      data: [\r\n        {\r\n          value: item,\r\n          label: {\r\n            show: false,\r\n            fontSize: 16,\r\n            position: 'right',\r\n            color: colorList[0],\r\n            formatter: function (params) {\r\n              return params.value;\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  });\r\n};\r\n \r\noption = {\r\n  backgroundColor: '#000',\r\n  tooltip: {},\r\n  radar: {\r\n    splitNumber: 4, // 中间辅助线\r\n    center: ['50%', '50%'], // 图表位置\r\n    radius: '65%', // 图表大小\r\n    // 设置雷达图中间射线的颜色\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: 'rgba(242, 242, 242, .1)',\r\n        fontSize: 40\r\n      }\r\n    },\r\n    // 网格线\r\n    splitLine: {\r\n      lineStyle: {\r\n        color: 'rgba(242, 242, 242, .08)'\r\n      }\r\n    },\r\n    indicator: xName,\r\n    // 雷达图背景的颜色，在这儿随便设置了一个颜色，完全不透明度为0，就实现了透明背景\r\n    splitArea: {\r\n      areaStyle: {\r\n        // 图表背景的颜色\r\n        color: ['#555555', '#444444', '#333333', '#222222'],\r\n        shadowColor: 'rgba(0,0,0,.15)',\r\n        shadowBlur: 2\r\n      }\r\n    },\r\n    name: {\r\n      lineHeight: 18,\r\n      color: '#fff',\r\n      fontSize: 14,\r\n      formatter: (labelName) => {\r\n        return labelName;\r\n      }\r\n    }\r\n  },\r\n  // 标轴值\r\n  polar: {\r\n    radius: '65%'\r\n  },\r\n  angleAxis: {\r\n    zlevel: 0,\r\n    min: 0,\r\n    max: 360,\r\n    clockwise: false,\r\n    axisTick: {\r\n      show: false\r\n    },\r\n    axisLabel: {\r\n      show: false\r\n    },\r\n    axisLine: {\r\n      show: false\r\n    },\r\n    splitLine: {\r\n      show: false\r\n    }\r\n  },\r\n  radiusAxis: {\r\n    zlevel: 0,\r\n    min: 0,\r\n    max: 100,\r\n    interval: 25,\r\n    axisLabel: {\r\n      textStyle: {\r\n        color: '#AFAFAF',\r\n        fontSize: 10\r\n      }\r\n    },\r\n    axisLine: {\r\n      show: false\r\n    },\r\n    splitLine: {\r\n      show: false\r\n    },\r\n    splitArea: {\r\n      show: false\r\n    }\r\n  },\r\n  series: buildSeries(yData)\r\n};\r\n \r\nlet currentIndex = -1;\r\nsetInterval(() => {\r\n  let dataLen = option.series[0].data[0].value.length + 1;\r\n  // 取消之前高亮的图形\r\n  myChart.dispatchAction({\r\n    type: 'downplay',\r\n    seriesIndex: currentIndex,\r\n    dataIndex: 0\r\n  });\r\n  currentIndex = (currentIndex + 1) % dataLen;\r\n  // 高亮当前图形\r\n  myChart.dispatchAction({\r\n    type: 'highlight',\r\n    seriesIndex: currentIndex,\r\n    dataIndex: 0\r\n  });\r\n  // 显示 tooltip\r\n  myChart.dispatchAction({\r\n    type: 'showTip',\r\n    seriesIndex: currentIndex,\r\n    dataIndex: 0\r\n  });\r\n}, 2000);\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}