{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { bind, each, clone, trim, isString, isFunction, isArray, isObject, extend } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport TooltipHTMLContent from './TooltipHTMLContent.js';\nimport TooltipRichContent from './TooltipRichContent.js';\nimport { convertToColorString, formatTpl } from '../../util/format.js';\nimport { parsePercent } from '../../util/number.js';\nimport { Rect } from '../../util/graphic.js';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport Model from '../../model/Model.js';\nimport * as globalListener from '../axisPointer/globalListener.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper.js';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model.js';\nimport ComponentView from '../../view/Component.js';\nimport { format as timeFormat } from '../../util/time.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { shouldTooltipConfine } from './helper.js';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat.js';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup.js';\nimport { findEventDispatcher } from '../../util/event.js';\nimport { clear, createOrUpdate } from '../../util/throttle.js';\nvar proxyRect = new Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\nvar TooltipView = /** @class */function (_super) {\n  __extends(TooltipView, _super);\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = TooltipView.type;\n    return _this;\n  }\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = this._renderMode = getTooltipRenderMode(tooltipModel.get('renderMode'));\n    this._tooltipContent = renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api, {\n      appendTo: tooltipModel.get('appendToBody', true) ? 'body' : tooltipModel.get('appendTo', true)\n    });\n  };\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n    // Reset\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    this._initGlobalListener();\n    this._keepShow();\n    // PENDING\n    // `mousemove` event will be triggered very frequently when the mouse moves fast,\n    // which causes that the `updatePosition` function was also called frequently.\n    // In Chrome with devtools open and Firefox, tooltip looks laggy and shakes. See #14695 #16101\n    // To avoid frequent triggering,\n    // consider throttling it in 50ms when transition is enabled\n    if (this._renderMode !== 'richText' && tooltipModel.get('transitionDuration')) {\n      createOrUpdate(this, '_updatePosition', 50, 'fixRate');\n    } else {\n      clear(this, '_updatePosition');\n    }\n  };\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api;\n    var triggerOn = tooltipModel.get('triggerOn');\n    // Try to keep the tooltip show when refreshing\n    if (this._lastX != null && this._lastY != null\n    // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && triggerOn !== 'none' && triggerOn !== 'click') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node || !api.getDom()) {\n      return;\n    }\n    var dispatchAction = makeDispatchAction(payload, api);\n    // Reset ticket\n    this._ticket = '';\n    // When triggered from axisPointer.\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      };\n      // Manually show tooltip while view is not using zrender elements.\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n    if (this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  };\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    // @ts-ignore\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    if (!seriesModel) {\n      return;\n    }\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n    if (!tooltipModel) {\n      return;\n    }\n    // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      var ecData = getECData(el);\n      if (ecData.ssrType === 'legend') {\n        // Don't trigger tooltip for legend tooltip item\n        return;\n      }\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        }\n        // Tooltip provided directly. Like legend.\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n      this._hide(dispatchAction);\n    }\n  };\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    });\n    // Only for legacy: `Serise['formatTooltip']` returns a string.\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex);\n          // Can't find data.\n          if (cbParams.dataIndex < 0) {\n            return;\n          }\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel;\n          // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n          var frag = seriesTooltipResult.frag;\n          if (frag) {\n            var valueFormatter = buildTooltipModel([series], globalTooltipModel).get('valueFormatter');\n            axisSectionMarkup.blocks.push(valueFormatter ? extend({\n              valueFormatter: valueFormatter\n            }, frag) : frag);\n          }\n          if (seriesTooltipResult.text) {\n            markupTextArrLegacy.push(seriesTooltipResult.text);\n          }\n          cbParamsList.push(cbParams);\n        });\n      });\n    });\n    // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    });\n    // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n  };\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher);\n    // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    // For example, graph link.\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n    params.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var valueFormatter = tooltipModel.get('valueFormatter');\n    var frag = seriesTooltipResult.frag;\n    var markupText = frag ? buildTooltipMarkup(valueFormatter ? extend({\n      valueFormatter: valueFormatter\n    }, frag) : frag, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.text;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    });\n    // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n    if (isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n    var tooltipModelCascade = [tooltipOpt];\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    }\n    // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they cannot share the same formatter. Since the global tooltip formatter is used for series\n    // by convention, we do not use it as the default formatter for component.\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + '';\n    // PENDING: this case do not support richText style yet.\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = clone(subTooltipModel.get('formatterParams') || {});\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    });\n    // If not dispatch showTip, tip may be hide triggered by axis.\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n  TooltipView.prototype._showTooltipContent = function (\n  // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n    var nearPointColor = nearPoint.color;\n    if (formatter) {\n      if (isString(formatter)) {\n        var useUTC = tooltipModel.ecModel.get('useUTC');\n        var params0 = isArray(params) ? params[0] : params;\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n        html = formatter;\n        if (isTimeAxis) {\n          html = timeFormat(params0.axisValue, html, useUTC);\n        }\n        html = formatTpl(html, params, true);\n      } else if (isFunction(formatter)) {\n        var callback = bind(function (cbTicket, html) {\n          if (cbTicket === this._ticket) {\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n          }\n        }, this);\n        this._ticket = asyncTicket;\n        html = formatter(params, asyncTicket, callback);\n      } else {\n        html = formatter;\n      }\n    }\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n    if (!isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x,\n  // Mouse x\n  y,\n  // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n    var viewHeight = this._api.getHeight();\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n    if (isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n    if (isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null;\n      // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n      vAlign = null;\n    }\n    // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (isString(positionExpr) && el) {\n      var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\n      x = pos[0];\n      y = pos[1];\n    } else {\n      var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n      x = pos[0];\n      y = pos[1];\n    }\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n    content.moveTo(x, y);\n  };\n  // FIXME\n  // Should we remove this but leave this to user?\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var lastCbParamsList = this._cbParamsList;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n        // check is cbParams data value changed\n        lastCbParamsList && each(lastItem.seriesDataIndices, function (idxItem) {\n          var seriesIdx = idxItem.seriesIndex;\n          var cbParams = cbParamsList[seriesIdx];\n          var lastCbParams = lastCbParamsList[seriesIdx];\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\n            contentNotChanged = false;\n          }\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    this._cbParamsList = cbParamsList;\n    return !!contentNotChanged;\n  };\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n    clear(this, '_updatePosition');\n    this._tooltipContent.dispose();\n    globalListener.unregister('itemTooltip', api);\n  };\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      }\n      // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n      if (isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n  return resultModel;\n}\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || bind(api.dispatchAction, api);\n}\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in default tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n  return [x, y];\n}\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - offset;\n      break;\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + offset;\n      break;\n    case 'left':\n      x = rect.x - domWidth - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n    case 'right':\n      x = rect.x + rectWidth + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n  return [x, y];\n}\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n  if (!model) {\n    return;\n  }\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\nexport default TooltipView;","map":{"version":3,"names":["__extends","bind","each","clone","trim","isString","isFunction","isArray","isObject","extend","env","TooltipHTMLContent","TooltipRichContent","convertToColorString","formatTpl","parsePercent","Rect","findPointFromSeries","getLayoutRect","Model","globalListener","axisHelper","axisPointerViewHelper","getTooltipRenderMode","preParseFinder","queryReferringComponents","ComponentView","format","timeFormat","getECData","shouldTooltipConfine","normalizeTooltipFormatResult","createTooltipMarkup","buildTooltipMarkup","TooltipMarkupStyleCreator","findEventDispatcher","clear","createOrUpdate","proxyRect","shape","x","y","width","height","TooltipView","_super","_this","apply","arguments","type","prototype","init","ecModel","api","node","getDom","tooltipModel","getComponent","renderMode","_renderMode","get","_tooltipContent","appendTo","render","group","removeAll","_tooltipModel","_ecModel","_api","tooltipContent","update","setEnterable","_initGlobalListener","_keepShow","triggerOn","register","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self_1","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","dataByCoordSys","_lastDataByCoordSys","payload","from","uid","makeDispatchAction","_ticket","cmptRef","findComponentReference","rect","el","getBoundingRect","applyTransform","transform","offsetX","offsetY","target","position","positionDefault","tooltip","tooltipConfig","name","option","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","data","getData","tooltipCascadedModel","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","ecData","ssrType","seriesDispatcher_1","cmptDispatcher_1","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleTooltipModel","cbParamsList","articleMarkup","blocks","noHeader","markupTextArrLegacy","markupStyleCreator","itemCoordSys","dataByAxis","axisItem","axisModel","axisDim","axisIndex","axisValue","value","axisValueLabel","getValueLabel","axis","seriesDataIndices","valueLabelOpt","axisSectionMarkup","header","sortBlocks","push","idxItem","series","dataIndexInside","cbParams","getDataParams","axisType","axisId","getAxisRawValue","marker","makeTooltipMarker","color","seriesTooltipResult","formatTooltip","frag","valueFormatter","text","reverse","positionExpr","orderMode","builtMarkupText","unshift","blockBreak","allMarkupText","join","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","dispatcher","dataModel","dataType","tooltipTrigger","params","markupText","asyncTicket","getRawIndex","tooltipOpt","content","formatter","tooltipModelCascade","cmpt","componentMainType","componentIndex","subTooltipModel","defaultHtml","formatterParams","html","nearPoint","_getNearestPoint","nearPointColor","useUTC","params0","isTimeAxis","callback","cbTicket","setContent","show","tooltipDataParams","trigger","borderColor","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","viewSize","slice","boxLayoutPosition","layoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","lastCbParamsList","_cbParamsList","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","seriesIdx","lastCbParams","dispose","unregister","modelCascade","defaultTooltipOption","resultModel","i","gapH","gapV","size","min","max","borderWidth","domWidth","domHeight","offset","ceil","SQRT2","rectWidth","rectHeight","queryOptionMap","keys","queryResult","useDefault","enableAll","enableNone","models","view","getViewOfComponentModel","traverse","subEl"],"sources":["D:/doc/workplace/vscode/Traffic simulation/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { bind, each, clone, trim, isString, isFunction, isArray, isObject, extend } from 'zrender/lib/core/util.js';\nimport env from 'zrender/lib/core/env.js';\nimport TooltipHTMLContent from './TooltipHTMLContent.js';\nimport TooltipRichContent from './TooltipRichContent.js';\nimport { convertToColorString, formatTpl } from '../../util/format.js';\nimport { parsePercent } from '../../util/number.js';\nimport { Rect } from '../../util/graphic.js';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport Model from '../../model/Model.js';\nimport * as globalListener from '../axisPointer/globalListener.js';\nimport * as axisHelper from '../../coord/axisHelper.js';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper.js';\nimport { getTooltipRenderMode, preParseFinder, queryReferringComponents } from '../../util/model.js';\nimport ComponentView from '../../view/Component.js';\nimport { format as timeFormat } from '../../util/time.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { shouldTooltipConfine } from './helper.js';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat.js';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup.js';\nimport { findEventDispatcher } from '../../util/event.js';\nimport { clear, createOrUpdate } from '../../util/throttle.js';\nvar proxyRect = new Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\nvar TooltipView = /** @class */function (_super) {\n  __extends(TooltipView, _super);\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = TooltipView.type;\n    return _this;\n  }\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = this._renderMode = getTooltipRenderMode(tooltipModel.get('renderMode'));\n    this._tooltipContent = renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api, {\n      appendTo: tooltipModel.get('appendToBody', true) ? 'body' : tooltipModel.get('appendTo', true)\n    });\n  };\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n    // Reset\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    this._initGlobalListener();\n    this._keepShow();\n    // PENDING\n    // `mousemove` event will be triggered very frequently when the mouse moves fast,\n    // which causes that the `updatePosition` function was also called frequently.\n    // In Chrome with devtools open and Firefox, tooltip looks laggy and shakes. See #14695 #16101\n    // To avoid frequent triggering,\n    // consider throttling it in 50ms when transition is enabled\n    if (this._renderMode !== 'richText' && tooltipModel.get('transitionDuration')) {\n      createOrUpdate(this, '_updatePosition', 50, 'fixRate');\n    } else {\n      clear(this, '_updatePosition');\n    }\n  };\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api;\n    var triggerOn = tooltipModel.get('triggerOn');\n    // Try to keep the tooltip show when refreshing\n    if (this._lastX != null && this._lastY != null\n    // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && triggerOn !== 'none' && triggerOn !== 'click') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node || !api.getDom()) {\n      return;\n    }\n    var dispatchAction = makeDispatchAction(payload, api);\n    // Reset ticket\n    this._ticket = '';\n    // When triggered from axisPointer.\n    var dataByCoordSys = payload.dataByCoordSys;\n    var cmptRef = findComponentReference(payload, ecModel, api);\n    if (cmptRef) {\n      var rect = cmptRef.el.getBoundingRect().clone();\n      rect.applyTransform(cmptRef.el.transform);\n      this._tryShow({\n        offsetX: rect.x + rect.width / 2,\n        offsetY: rect.y + rect.height / 2,\n        target: cmptRef.el,\n        position: payload.position,\n        // When manully trigger, the mouse is not on the el, so we'd better to\n        // position tooltip on the bottom of the el and display arrow is possible.\n        positionDefault: 'bottom'\n      }, dispatchAction);\n    } else if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      getECData(el).tooltipConfig = {\n        name: null,\n        option: payload.tooltip\n      };\n      // Manually show tooltip while view is not using zrender elements.\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          target: pointInfo.el,\n          position: payload.position,\n          // When manully trigger, the mouse is not on the el, so we'd better to\n          // position tooltip on the bottom of the el and display arrow is possible.\n          positionDefault: 'bottom'\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n    if (this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  };\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    // @ts-ignore\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    if (!seriesModel) {\n      return;\n    }\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model], this._tooltipModel);\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n    if (!tooltipModel) {\n      return;\n    }\n    // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } else if (el) {\n      var ecData = getECData(el);\n      if (ecData.ssrType === 'legend') {\n        // Don't trigger tooltip for legend tooltip item\n        return;\n      }\n      this._lastDataByCoordSys = null;\n      var seriesDispatcher_1;\n      var cmptDispatcher_1;\n      findEventDispatcher(el, function (target) {\n        // Always show item tooltip if mouse is on the element with dataIndex\n        if (getECData(target).dataIndex != null) {\n          seriesDispatcher_1 = target;\n          return true;\n        }\n        // Tooltip provided directly. Like legend.\n        if (getECData(target).tooltipConfig != null) {\n          cmptDispatcher_1 = target;\n          return true;\n        }\n      }, true);\n      if (seriesDispatcher_1) {\n        this._showSeriesItemTooltip(e, seriesDispatcher_1, dispatchAction);\n      } else if (cmptDispatcher_1) {\n        this._showComponentItemTooltip(e, cmptDispatcher_1, dispatchAction);\n      } else {\n        this._hide(dispatchAction);\n      }\n    } else {\n      this._lastDataByCoordSys = null;\n      this._hide(dispatchAction);\n    }\n  };\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption], globalTooltipModel);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    });\n    // Only for legacy: `Serise['formatTooltip']` returns a string.\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex);\n          // Can't find data.\n          if (cbParams.dataIndex < 0) {\n            return;\n          }\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel;\n          // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n          var frag = seriesTooltipResult.frag;\n          if (frag) {\n            var valueFormatter = buildTooltipModel([series], globalTooltipModel).get('valueFormatter');\n            axisSectionMarkup.blocks.push(valueFormatter ? extend({\n              valueFormatter: valueFormatter\n            }, frag) : frag);\n          }\n          if (seriesTooltipResult.text) {\n            markupTextArrLegacy.push(seriesTooltipResult.text);\n          }\n          cbParamsList.push(cbParams);\n        });\n      });\n    });\n    // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys, cbParamsList)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    });\n    // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, dispatcher, dispatchAction) {\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher);\n    // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n    // For example, graph link.\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var positionDefault = e.positionDefault;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model], this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var tooltipTrigger = tooltipModel.get('trigger');\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n    params.marker = markupStyleCreator.makeTooltipMarker('item', convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var valueFormatter = tooltipModel.get('valueFormatter');\n    var frag = seriesTooltipResult.frag;\n    var markupText = frag ? buildTooltipMarkup(valueFormatter ? extend({\n      valueFormatter: valueFormatter\n    }, frag) : frag, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.text;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    });\n    // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var ecData = getECData(el);\n    var tooltipConfig = ecData.tooltipConfig;\n    var tooltipOpt = tooltipConfig.option || {};\n    if (isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n    var tooltipModelCascade = [tooltipOpt];\n    var cmpt = this._ecModel.getComponent(ecData.componentMainType, ecData.componentIndex);\n    if (cmpt) {\n      tooltipModelCascade.push(cmpt);\n    }\n    // In most cases, component tooltip formatter has different params with series tooltip formatter,\n    // so that they cannot share the same formatter. Since the global tooltip formatter is used for series\n    // by convention, we do not use it as the default formatter for component.\n    tooltipModelCascade.push({\n      formatter: tooltipOpt.content\n    });\n    var positionDefault = e.positionDefault;\n    var subTooltipModel = buildTooltipModel(tooltipModelCascade, this._tooltipModel, positionDefault ? {\n      position: positionDefault\n    } : null);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + '';\n    // PENDING: this case do not support richText style yet.\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n    this._showOrMove(subTooltipModel, function () {\n      // Use formatterParams from element defined in component\n      // Avoid users modify it.\n      var formatterParams = clone(subTooltipModel.get('formatterParams') || {});\n      this._showTooltipContent(subTooltipModel, defaultHtml, formatterParams, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    });\n    // If not dispatch showTip, tip may be hide triggered by axis.\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n  TooltipView.prototype._showTooltipContent = function (\n  // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n    var nearPointColor = nearPoint.color;\n    if (formatter) {\n      if (isString(formatter)) {\n        var useUTC = tooltipModel.ecModel.get('useUTC');\n        var params0 = isArray(params) ? params[0] : params;\n        var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n        html = formatter;\n        if (isTimeAxis) {\n          html = timeFormat(params0.axisValue, html, useUTC);\n        }\n        html = formatTpl(html, params, true);\n      } else if (isFunction(formatter)) {\n        var callback = bind(function (cbTicket, html) {\n          if (cbTicket === this._ticket) {\n            tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n            this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n          }\n        }, this);\n        this._ticket = asyncTicket;\n        html = formatter(params, asyncTicket, callback);\n      } else {\n        html = formatter;\n      }\n    }\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPointColor, positionExpr);\n    tooltipContent.show(tooltipModel, nearPointColor);\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n    if (!isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x,\n  // Mouse x\n  y,\n  // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n    var viewHeight = this._api.getHeight();\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n    if (isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n    if (isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null;\n      // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n      vAlign = null;\n    }\n    // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (isString(positionExpr) && el) {\n      var pos = calcTooltipPosition(positionExpr, rect, contentSize, tooltipModel.get('borderWidth'));\n      x = pos[0];\n      y = pos[1];\n    } else {\n      var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n      x = pos[0];\n      y = pos[1];\n    }\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n    content.moveTo(x, y);\n  };\n  // FIXME\n  // Should we remove this but leave this to user?\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys, cbParamsList) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var lastCbParamsList = this._cbParamsList;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n        // check is cbParams data value changed\n        lastCbParamsList && each(lastItem.seriesDataIndices, function (idxItem) {\n          var seriesIdx = idxItem.seriesIndex;\n          var cbParams = cbParamsList[seriesIdx];\n          var lastCbParams = lastCbParamsList[seriesIdx];\n          if (cbParams && lastCbParams && lastCbParams.data !== cbParams.data) {\n            contentNotChanged = false;\n          }\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    this._cbParamsList = cbParamsList;\n    return !!contentNotChanged;\n  };\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node || !api.getDom()) {\n      return;\n    }\n    clear(this, '_updatePosition');\n    this._tooltipContent.dispose();\n    globalListener.unregister('itemTooltip', api);\n  };\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\nfunction buildTooltipModel(modelCascade, globalTooltipModel, defaultTooltipOption) {\n  // Last is always tooltip model.\n  var ecModel = globalTooltipModel.ecModel;\n  var resultModel;\n  if (defaultTooltipOption) {\n    resultModel = new Model(defaultTooltipOption, ecModel, ecModel);\n    resultModel = new Model(globalTooltipModel.option, resultModel, ecModel);\n  } else {\n    resultModel = globalTooltipModel;\n  }\n  for (var i = modelCascade.length - 1; i >= 0; i--) {\n    var tooltipOpt = modelCascade[i];\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      }\n      // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n      if (isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n      if (tooltipOpt) {\n        resultModel = new Model(tooltipOpt, resultModel, ecModel);\n      }\n    }\n  }\n  return resultModel;\n}\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || bind(api.dispatchAction, api);\n}\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in default tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n  return [x, y];\n}\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getSize();\n  var width = size[0];\n  var height = size[1];\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\nfunction calcTooltipPosition(position, rect, contentSize, borderWidth) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var offset = Math.ceil(Math.SQRT2 * borderWidth) + 8;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - offset;\n      break;\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + offset;\n      break;\n    case 'left':\n      x = rect.x - domWidth - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n    case 'right':\n      x = rect.x + rectWidth + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n  return [x, y];\n}\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n/**\n * Find target component by payload like:\n * ```js\n * { legendId: 'some_id', name: 'xxx' }\n * { toolboxIndex: 1, name: 'xxx' }\n * { geoName: 'some_name', name: 'xxx' }\n * ```\n * PENDING: at present only\n *\n * If not found, return null/undefined.\n */\nfunction findComponentReference(payload, ecModel, api) {\n  var queryOptionMap = preParseFinder(payload).queryOptionMap;\n  var componentMainType = queryOptionMap.keys()[0];\n  if (!componentMainType || componentMainType === 'series') {\n    return;\n  }\n  var queryResult = queryReferringComponents(ecModel, componentMainType, queryOptionMap.get(componentMainType), {\n    useDefault: false,\n    enableAll: false,\n    enableNone: false\n  });\n  var model = queryResult.models[0];\n  if (!model) {\n    return;\n  }\n  var view = api.getViewOfComponentModel(model);\n  var el;\n  view.group.traverse(function (subEl) {\n    var tooltipConfig = getECData(subEl).tooltipConfig;\n    if (tooltipConfig && tooltipConfig.name === payload.name) {\n      el = subEl;\n      return true; // stop\n    }\n  });\n\n  if (el) {\n    return {\n      componentMainType: componentMainType,\n      componentIndex: model.componentIndex,\n      el: el\n    };\n  }\n}\nexport default TooltipView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}