{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    ref: _vm.ref,\n    staticClass: \"dv-decoration-9\"\n  }, [_c(\"svg\", {\n    style: `transform:scale(${_vm.svgScale[0]},${_vm.svgScale[1]});`,\n    attrs: {\n      width: `${_vm.svgWH[0]}px`,\n      height: `${_vm.svgWH[1]}px`\n    }\n  }, [_c(\"defs\", [_c(\"polygon\", {\n    attrs: {\n      id: _vm.polygonId,\n      points: \"15, 46.5, 21, 47.5, 21, 52.5, 15, 53.5\"\n    }\n  })]), _c(\"circle\", {\n    attrs: {\n      cx: \"50\",\n      cy: \"50\",\n      r: \"45\",\n      fill: \"transparent\",\n      stroke: _vm.mergedColor[1],\n      \"stroke-width\": \"10\",\n      \"stroke-dasharray\": \"80, 100, 30, 100\"\n    }\n  }, [_c(\"animateTransform\", {\n    attrs: {\n      attributeName: \"transform\",\n      type: \"rotate\",\n      values: \"0 50 50;360 50 50\",\n      dur: `${_vm.dur}s`,\n      repeatCount: \"indefinite\"\n    }\n  })], 1), _c(\"circle\", {\n    attrs: {\n      cx: \"50\",\n      cy: \"50\",\n      r: \"45\",\n      fill: \"transparent\",\n      stroke: _vm.mergedColor[0],\n      \"stroke-width\": \"6\",\n      \"stroke-dasharray\": \"50, 66, 100, 66\"\n    }\n  }, [_c(\"animateTransform\", {\n    attrs: {\n      attributeName: \"transform\",\n      type: \"rotate\",\n      values: \"0 50 50;-360 50 50\",\n      dur: `${_vm.dur}s`,\n      repeatCount: \"indefinite\"\n    }\n  })], 1), _c(\"circle\", {\n    attrs: {\n      cx: \"50\",\n      cy: \"50\",\n      r: \"38\",\n      fill: \"transparent\",\n      stroke: _vm.fade(_vm.mergedColor[1] || _vm.defaultColor[1], 30),\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"5, 1\"\n    }\n  }), _vm._l(new Array(20).fill(0), function (foo, i) {\n    return _c(\"use\", {\n      key: i,\n      attrs: {\n        \"xlink:href\": `#${_vm.polygonId}`,\n        stroke: _vm.mergedColor[1],\n        fill: Math.random() > 0.4 ? \"transparent\" : _vm.mergedColor[0]\n      }\n    }, [_c(\"animateTransform\", {\n      attrs: {\n        attributeName: \"transform\",\n        type: \"rotate\",\n        values: \"0 50 50;360 50 50\",\n        dur: `${_vm.dur}s`,\n        begin: `${i * _vm.dur / 20}s`,\n        repeatCount: \"indefinite\"\n      }\n    })], 1);\n  }), _c(\"circle\", {\n    attrs: {\n      cx: \"50\",\n      cy: \"50\",\n      r: \"26\",\n      fill: \"transparent\",\n      stroke: _vm.fade(_vm.mergedColor[1] || _vm.defaultColor[1], 30),\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"5, 1\"\n    }\n  })], 2), _vm._t(\"default\")], 2);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","ref","staticClass","style","svgScale","attrs","width","svgWH","height","id","polygonId","points","cx","cy","r","fill","stroke","mergedColor","attributeName","type","values","dur","repeatCount","fade","defaultColor","_l","Array","foo","i","key","Math","random","begin","_t","staticRenderFns","_withStripped"],"sources":["D:/doc/workplace/vscode/vue03/node_modules/@jiaminghi/data-view/lib/components/decoration9/src/main.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    { ref: _vm.ref, staticClass: \"dv-decoration-9\" },\n    [\n      _c(\n        \"svg\",\n        {\n          style: `transform:scale(${_vm.svgScale[0]},${_vm.svgScale[1]});`,\n          attrs: { width: `${_vm.svgWH[0]}px`, height: `${_vm.svgWH[1]}px` },\n        },\n        [\n          _c(\"defs\", [\n            _c(\"polygon\", {\n              attrs: {\n                id: _vm.polygonId,\n                points: \"15, 46.5, 21, 47.5, 21, 52.5, 15, 53.5\",\n              },\n            }),\n          ]),\n          _c(\n            \"circle\",\n            {\n              attrs: {\n                cx: \"50\",\n                cy: \"50\",\n                r: \"45\",\n                fill: \"transparent\",\n                stroke: _vm.mergedColor[1],\n                \"stroke-width\": \"10\",\n                \"stroke-dasharray\": \"80, 100, 30, 100\",\n              },\n            },\n            [\n              _c(\"animateTransform\", {\n                attrs: {\n                  attributeName: \"transform\",\n                  type: \"rotate\",\n                  values: \"0 50 50;360 50 50\",\n                  dur: `${_vm.dur}s`,\n                  repeatCount: \"indefinite\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\n            \"circle\",\n            {\n              attrs: {\n                cx: \"50\",\n                cy: \"50\",\n                r: \"45\",\n                fill: \"transparent\",\n                stroke: _vm.mergedColor[0],\n                \"stroke-width\": \"6\",\n                \"stroke-dasharray\": \"50, 66, 100, 66\",\n              },\n            },\n            [\n              _c(\"animateTransform\", {\n                attrs: {\n                  attributeName: \"transform\",\n                  type: \"rotate\",\n                  values: \"0 50 50;-360 50 50\",\n                  dur: `${_vm.dur}s`,\n                  repeatCount: \"indefinite\",\n                },\n              }),\n            ],\n            1\n          ),\n          _c(\"circle\", {\n            attrs: {\n              cx: \"50\",\n              cy: \"50\",\n              r: \"38\",\n              fill: \"transparent\",\n              stroke: _vm.fade(_vm.mergedColor[1] || _vm.defaultColor[1], 30),\n              \"stroke-width\": \"1\",\n              \"stroke-dasharray\": \"5, 1\",\n            },\n          }),\n          _vm._l(new Array(20).fill(0), function (foo, i) {\n            return _c(\n              \"use\",\n              {\n                key: i,\n                attrs: {\n                  \"xlink:href\": `#${_vm.polygonId}`,\n                  stroke: _vm.mergedColor[1],\n                  fill:\n                    Math.random() > 0.4 ? \"transparent\" : _vm.mergedColor[0],\n                },\n              },\n              [\n                _c(\"animateTransform\", {\n                  attrs: {\n                    attributeName: \"transform\",\n                    type: \"rotate\",\n                    values: \"0 50 50;360 50 50\",\n                    dur: `${_vm.dur}s`,\n                    begin: `${(i * _vm.dur) / 20}s`,\n                    repeatCount: \"indefinite\",\n                  },\n                }),\n              ],\n              1\n            )\n          }),\n          _c(\"circle\", {\n            attrs: {\n              cx: \"50\",\n              cy: \"50\",\n              r: \"26\",\n              fill: \"transparent\",\n              stroke: _vm.fade(_vm.mergedColor[1] || _vm.defaultColor[1], 30),\n              \"stroke-width\": \"1\",\n              \"stroke-dasharray\": \"5, 1\",\n            },\n          }),\n        ],\n        2\n      ),\n      _vm._t(\"default\"),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}