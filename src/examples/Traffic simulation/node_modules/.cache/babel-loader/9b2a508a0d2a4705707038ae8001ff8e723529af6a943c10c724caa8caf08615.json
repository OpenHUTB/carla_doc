{"ast":null,"code":"import autoResize from '../../../mixin/autoResize';\nimport { uuid } from '../../../util/index';\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index';\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util';\nimport { fade } from '@jiaminghi/color';\nexport default {\n  name: 'DvBorderBox12',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => []\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data() {\n    const id = uuid();\n    return {\n      ref: 'border-box-12',\n      filterId: `borderr-box-12-filterId-${id}`,\n      defaultColor: ['#2e6099', '#7ce7fd'],\n      mergedColor: []\n    };\n  },\n  watch: {\n    color() {\n      const {\n        mergeColor\n      } = this;\n      mergeColor();\n    }\n  },\n  methods: {\n    mergeColor() {\n      const {\n        color,\n        defaultColor\n      } = this;\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || []);\n    },\n    fade\n  },\n  mounted() {\n    const {\n      mergeColor\n    } = this;\n    mergeColor();\n  }\n};","map":{"version":3,"names":["autoResize","uuid","deepMerge","deepClone","fade","name","mixins","props","color","type","Array","default","backgroundColor","String","data","id","ref","filterId","defaultColor","mergedColor","watch","mergeColor","methods","mounted"],"sources":["node_modules/@jiaminghi/data-view/lib/components/borderBox12/src/main.vue"],"sourcesContent":["<template>\n  <div class=\"dv-border-box-12\" :ref=\"ref\">\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\n      <defs>\n        <filter :id=\"filterId\" height=\"150%\" width=\"150%\" x=\"-25%\" y=\"-25%\">\n          <feMorphology operator=\"dilate\" radius=\"1\" in=\"SourceAlpha\" result=\"thicken\" />\n          <feGaussianBlur in=\"thicken\" stdDeviation=\"2\" result=\"blurred\" />\n          <feFlood :flood-color=\"fade(mergedColor[1] || defaultColor[1], 70)\" result=\"glowColor\">\n            <animate\n              attributeName=\"flood-color\"\n              :values=\"`\n                ${fade(mergedColor[1] || defaultColor[1], 70)};\n                ${fade(mergedColor[1] || defaultColor[1], 30)};\n                ${fade(mergedColor[1] || defaultColor[1], 70)};\n              `\"\n              dur=\"3s\"\n              begin=\"0s\"\n              repeatCount=\"indefinite\"\n            />\n          </feFlood>\n          <feComposite in=\"glowColor\" in2=\"blurred\" operator=\"in\" result=\"softGlowColored\" />\n          <feMerge>\n            <feMergeNode in=\"softGlowColored\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n      </defs>\n\n      <path\n        v-if=\"width && height\"\n        :fill=\"backgroundColor\"\n        stroke-width=\"2\"\n        :stroke=\"mergedColor[0]\"\n        :d=\"`\n          M15 5 L ${width - 15} 5 Q ${width - 5} 5, ${width - 5} 15\n          L ${width - 5} ${height - 15} Q ${width - 5} ${height - 5}, ${width - 15} ${height - 5}\n          L 15, ${height - 5} Q 5 ${height - 5} 5 ${height - 15} L 5 15\n          Q 5 5 15 5\n        `\"\n      />\n\n      <path\n        stroke-width=\"2\"\n        fill=\"transparent\"\n        stroke-linecap=\"round\"\n        :filter=\"`url(#${filterId})`\"\n        :stroke=\"mergedColor[1]\"\n        :d=\"`M 20 5 L 15 5 Q 5 5 5 15 L 5 20`\"\n      />\n\n      <path\n        stroke-width=\"2\"\n        fill=\"transparent\"\n        stroke-linecap=\"round\"\n        :filter=\"`url(#${filterId})`\"\n        :stroke=\"mergedColor[1]\"\n        :d=\"`M ${width - 20} 5 L ${width - 15} 5 Q ${width - 5} 5 ${width - 5} 15 L ${width - 5} 20`\"\n      />\n\n      <path\n        stroke-width=\"2\"\n        fill=\"transparent\"\n        stroke-linecap=\"round\"\n        :filter=\"`url(#${filterId})`\"\n        :stroke=\"mergedColor[1]\"\n        :d=\"`\n          M ${width - 20} ${height - 5} L ${width - 15} ${height - 5}\n          Q ${width - 5} ${height - 5} ${width - 5} ${height - 15}\n          L ${width - 5} ${height - 20}\n        `\"\n      />\n\n      <path\n        stroke-width=\"2\"\n        fill=\"transparent\"\n        stroke-linecap=\"round\"\n        :filter=\"`url(#${filterId})`\"\n        :stroke=\"mergedColor[1]\"\n        :d=\"`\n          M 20 ${height - 5} L 15 ${height - 5}\n          Q 5 ${height - 5} 5 ${height - 15}\n          L 5 ${height - 20}\n        `\"\n      />\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\nimport { uuid } from '../../../util/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { fade } from '@jiaminghi/color'\n\nexport default {\n  name: 'DvBorderBox12',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'border-box-12',\n      filterId: `borderr-box-12-filterId-${id}`,\n\n      defaultColor: ['#2e6099', '#7ce7fd'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    },\n    fade\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"mappings":"AA6FA,OAAAA,UAAA;AACA,SAAAC,IAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,SAAA;AAEA,SAAAC,IAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAN,UAAA;EACAO,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA,EAAAA,CAAA;IACA;IACAC,eAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;EACA;EACAG,KAAA;IACA,MAAAC,EAAA,GAAAd,IAAA;IACA;MACAe,GAAA;MACAC,QAAA,6BAAAF,EAAA;MAEAG,YAAA;MAEAC,WAAA;IACA;EACA;EACAC,KAAA;IACAZ,MAAA;MACA;QAAAa;MAAA;MAEAA,UAAA;IACA;EACA;EACAC,OAAA;IACAD,WAAA;MACA;QAAAb,KAAA;QAAAU;MAAA;MAEA,KAAAC,WAAA,GAAAjB,SAAA,CAAAC,SAAA,CAAAe,YAAA,SAAAV,KAAA;IACA;IACAJ;EACA;EACAmB,QAAA;IACA;MAAAF;IAAA;IAEAA,UAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}