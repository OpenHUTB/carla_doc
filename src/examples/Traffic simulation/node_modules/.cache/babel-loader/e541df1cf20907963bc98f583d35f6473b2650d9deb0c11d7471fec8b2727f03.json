{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transition = transition;\nexports.injectNewCurve = injectNewCurve;\nexports[\"default\"] = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _curves = _interopRequireDefault(require(\"./config/curves\"));\nvar defaultTransitionBC = 'linear';\n/**\r\n * @description Get the N-frame animation state by the start and end state\r\n *              of the animation and the easing curve\r\n * @param {String|Array} tBC               Easing curve name or data\r\n * @param {Number|Array|Object} startState Animation start state\r\n * @param {Number|Array|Object} endState   Animation end state\r\n * @param {Number} frameNum                Number of Animation frames\r\n * @param {Boolean} deep                   Whether to use recursive mode\r\n * @return {Array|Boolean} State of each frame of the animation (Invalid input will return false)\r\n */\n\nfunction transition(tBC) {\n  var startState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var endState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var frameNum = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 30;\n  var deep = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (!checkParams.apply(void 0, arguments)) return false;\n  try {\n    // Get the transition bezier curve\n    var bezierCurve = getBezierCurve(tBC); // Get the progress of each frame state\n\n    var frameStateProgress = getFrameStateProgress(bezierCurve, frameNum); // If the recursion mode is not enabled or the state type is Number, the shallow state calculation is performed directly.\n\n    if (!deep || typeof endState === 'number') return getTransitionState(startState, endState, frameStateProgress);\n    return recursionTransitionState(startState, endState, frameStateProgress);\n  } catch (_unused) {\n    console.warn('Transition parameter may be abnormal!');\n    return [endState];\n  }\n}\n/**\r\n * @description Check if the parameters are legal\r\n * @param {String} tBC      Name of transition bezier curve\r\n * @param {Any} startState  Transition start state\r\n * @param {Any} endState    Transition end state\r\n * @param {Number} frameNum Number of transition frames\r\n * @return {Boolean} Is the parameter legal\r\n */\n\nfunction checkParams(tBC) {\n  var startState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var endState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var frameNum = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 30;\n  if (!tBC || startState === false || endState === false || !frameNum) {\n    console.error('transition: Missing Parameters!');\n    return false;\n  }\n  if ((0, _typeof2[\"default\"])(startState) !== (0, _typeof2[\"default\"])(endState)) {\n    console.error('transition: Inconsistent Status Types!');\n    return false;\n  }\n  var stateType = (0, _typeof2[\"default\"])(endState);\n  if (stateType === 'string' || stateType === 'boolean' || !tBC.length) {\n    console.error('transition: Unsupported Data Type of State!');\n    return false;\n  }\n  if (!_curves[\"default\"].has(tBC) && !(tBC instanceof Array)) {\n    console.warn('transition: Transition curve not found, default curve will be used!');\n  }\n  return true;\n}\n/**\r\n * @description Get the transition bezier curve\r\n * @param {String} tBC Name of transition bezier curve\r\n * @return {Array} Bezier curve data\r\n */\n\nfunction getBezierCurve(tBC) {\n  var bezierCurve = '';\n  if (_curves[\"default\"].has(tBC)) {\n    bezierCurve = _curves[\"default\"].get(tBC);\n  } else if (tBC instanceof Array) {\n    bezierCurve = tBC;\n  } else {\n    bezierCurve = _curves[\"default\"].get(defaultTransitionBC);\n  }\n  return bezierCurve;\n}\n/**\r\n * @description Get the progress of each frame state\r\n * @param {Array} bezierCurve Transition bezier curve\r\n * @param {Number} frameNum   Number of transition frames\r\n * @return {Array} Progress of each frame state\r\n */\n\nfunction getFrameStateProgress(bezierCurve, frameNum) {\n  var tMinus = 1 / (frameNum - 1);\n  var tState = new Array(frameNum).fill(0).map(function (t, i) {\n    return i * tMinus;\n  });\n  var frameState = tState.map(function (t) {\n    return getFrameStateFromT(bezierCurve, t);\n  });\n  return frameState;\n}\n/**\r\n * @description Get the progress of the corresponding frame according to t\r\n * @param {Array} bezierCurve Transition bezier curve\r\n * @param {Number} t          Current frame t\r\n * @return {Number} Progress of current frame\r\n */\n\nfunction getFrameStateFromT(bezierCurve, t) {\n  var tBezierCurvePoint = getBezierCurvePointFromT(bezierCurve, t);\n  var bezierCurvePointT = getBezierCurvePointTFromReT(tBezierCurvePoint, t);\n  return getBezierCurveTState(tBezierCurvePoint, bezierCurvePointT);\n}\n/**\r\n * @description Get the corresponding sub-curve according to t\r\n * @param {Array} bezierCurve Transition bezier curve\r\n * @param {Number} t          Current frame t\r\n * @return {Array} Sub-curve of t\r\n */\n\nfunction getBezierCurvePointFromT(bezierCurve, t) {\n  var lastIndex = bezierCurve.length - 1;\n  var begin = '',\n    end = '';\n  bezierCurve.findIndex(function (item, i) {\n    if (i === lastIndex) return;\n    begin = item;\n    end = bezierCurve[i + 1];\n    var currentMainPointX = begin[0][0];\n    var nextMainPointX = end[0][0];\n    return t >= currentMainPointX && t < nextMainPointX;\n  });\n  var p0 = begin[0];\n  var p1 = begin[2] || begin[0];\n  var p2 = end[1] || end[0];\n  var p3 = end[0];\n  return [p0, p1, p2, p3];\n}\n/**\r\n * @description Get local t based on t and sub-curve\r\n * @param {Array} bezierCurve Sub-curve\r\n * @param {Number} t          Current frame t\r\n * @return {Number} local t of sub-curve\r\n */\n\nfunction getBezierCurvePointTFromReT(bezierCurve, t) {\n  var reBeginX = bezierCurve[0][0];\n  var reEndX = bezierCurve[3][0];\n  var xMinus = reEndX - reBeginX;\n  var tMinus = t - reBeginX;\n  return tMinus / xMinus;\n}\n/**\r\n * @description Get the curve progress of t\r\n * @param {Array} bezierCurve Sub-curve\r\n * @param {Number} t          Current frame t\r\n * @return {Number} Progress of current frame\r\n */\n\nfunction getBezierCurveTState(_ref, t) {\n  var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 4),\n    _ref2$ = (0, _slicedToArray2[\"default\"])(_ref2[0], 2),\n    p0 = _ref2$[1],\n    _ref2$2 = (0, _slicedToArray2[\"default\"])(_ref2[1], 2),\n    p1 = _ref2$2[1],\n    _ref2$3 = (0, _slicedToArray2[\"default\"])(_ref2[2], 2),\n    p2 = _ref2$3[1],\n    _ref2$4 = (0, _slicedToArray2[\"default\"])(_ref2[3], 2),\n    p3 = _ref2$4[1];\n  var pow = Math.pow;\n  var tMinus = 1 - t;\n  var result1 = p0 * pow(tMinus, 3);\n  var result2 = 3 * p1 * t * pow(tMinus, 2);\n  var result3 = 3 * p2 * pow(t, 2) * tMinus;\n  var result4 = p3 * pow(t, 3);\n  return 1 - (result1 + result2 + result3 + result4);\n}\n/**\r\n * @description Get transition state according to frame progress\r\n * @param {Any} startState   Transition start state\r\n * @param {Any} endState     Transition end state\r\n * @param {Array} frameState Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\nfunction getTransitionState(begin, end, frameState) {\n  var stateType = 'object';\n  if (typeof begin === 'number') stateType = 'number';\n  if (begin instanceof Array) stateType = 'array';\n  if (stateType === 'number') return getNumberTransitionState(begin, end, frameState);\n  if (stateType === 'array') return getArrayTransitionState(begin, end, frameState);\n  if (stateType === 'object') return getObjectTransitionState(begin, end, frameState);\n  return frameState.map(function (t) {\n    return end;\n  });\n}\n/**\r\n * @description Get the transition data of the number type\r\n * @param {Number} startState Transition start state\r\n * @param {Number} endState   Transition end state\r\n * @param {Array} frameState  Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\nfunction getNumberTransitionState(begin, end, frameState) {\n  var minus = end - begin;\n  return frameState.map(function (s) {\n    return begin + minus * s;\n  });\n}\n/**\r\n * @description Get the transition data of the array type\r\n * @param {Array} startState Transition start state\r\n * @param {Array} endState   Transition end state\r\n * @param {Array} frameState Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\nfunction getArrayTransitionState(begin, end, frameState) {\n  var minus = end.map(function (v, i) {\n    if (typeof v !== 'number') return false;\n    return v - begin[i];\n  });\n  return frameState.map(function (s) {\n    return minus.map(function (v, i) {\n      if (v === false) return end[i];\n      return begin[i] + v * s;\n    });\n  });\n}\n/**\r\n * @description Get the transition data of the object type\r\n * @param {Object} startState Transition start state\r\n * @param {Object} endState   Transition end state\r\n * @param {Array} frameState  Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\nfunction getObjectTransitionState(begin, end, frameState) {\n  var keys = Object.keys(end);\n  var beginValue = keys.map(function (k) {\n    return begin[k];\n  });\n  var endValue = keys.map(function (k) {\n    return end[k];\n  });\n  var arrayState = getArrayTransitionState(beginValue, endValue, frameState);\n  return arrayState.map(function (item) {\n    var frameData = {};\n    item.forEach(function (v, i) {\n      return frameData[keys[i]] = v;\n    });\n    return frameData;\n  });\n}\n/**\r\n * @description Get the transition state data by recursion\r\n * @param {Array|Object} startState Transition start state\r\n * @param {Array|Object} endState   Transition end state\r\n * @param {Array} frameState        Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\nfunction recursionTransitionState(begin, end, frameState) {\n  var state = getTransitionState(begin, end, frameState);\n  var _loop = function _loop(key) {\n    var bTemp = begin[key];\n    var eTemp = end[key];\n    if ((0, _typeof2[\"default\"])(eTemp) !== 'object') return \"continue\";\n    var data = recursionTransitionState(bTemp, eTemp, frameState);\n    state.forEach(function (fs, i) {\n      return fs[key] = data[i];\n    });\n  };\n  for (var key in end) {\n    var _ret = _loop(key);\n    if (_ret === \"continue\") continue;\n  }\n  return state;\n}\n/**\r\n * @description Inject new curve into curves as config\r\n * @param {Any} key     The key of curve\r\n * @param {Array} curve Bezier curve data\r\n * @return {Undefined} No return\r\n */\n\nfunction injectNewCurve(key, curve) {\n  if (!key || !curve) {\n    console.error('InjectNewCurve Missing Parameters!');\n    return;\n  }\n  _curves[\"default\"].set(key, curve);\n}\nvar _default = transition;\nexports[\"default\"] = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","transition","injectNewCurve","_slicedToArray2","_typeof2","_curves","defaultTransitionBC","tBC","startState","arguments","length","undefined","endState","frameNum","deep","checkParams","apply","bezierCurve","getBezierCurve","frameStateProgress","getFrameStateProgress","getTransitionState","recursionTransitionState","_unused","console","warn","error","stateType","has","Array","get","tMinus","tState","fill","map","t","i","frameState","getFrameStateFromT","tBezierCurvePoint","getBezierCurvePointFromT","bezierCurvePointT","getBezierCurvePointTFromReT","getBezierCurveTState","lastIndex","begin","end","findIndex","item","currentMainPointX","nextMainPointX","p0","p1","p2","p3","reBeginX","reEndX","xMinus","_ref","_ref2","_ref2$","_ref2$2","_ref2$3","_ref2$4","pow","Math","result1","result2","result3","result4","getNumberTransitionState","getArrayTransitionState","getObjectTransitionState","minus","s","v","keys","beginValue","k","endValue","arrayState","frameData","forEach","state","_loop","key","bTemp","eTemp","data","fs","_ret","curve","set","_default"],"sources":["D:/doc/workplace/vscode/Traffic simulation/node_modules/@jiaminghi/transition/lib/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transition = transition;\nexports.injectNewCurve = injectNewCurve;\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _curves = _interopRequireDefault(require(\"./config/curves\"));\n\nvar defaultTransitionBC = 'linear';\n/**\r\n * @description Get the N-frame animation state by the start and end state\r\n *              of the animation and the easing curve\r\n * @param {String|Array} tBC               Easing curve name or data\r\n * @param {Number|Array|Object} startState Animation start state\r\n * @param {Number|Array|Object} endState   Animation end state\r\n * @param {Number} frameNum                Number of Animation frames\r\n * @param {Boolean} deep                   Whether to use recursive mode\r\n * @return {Array|Boolean} State of each frame of the animation (Invalid input will return false)\r\n */\n\nfunction transition(tBC) {\n  var startState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var endState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var frameNum = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 30;\n  var deep = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  if (!checkParams.apply(void 0, arguments)) return false;\n\n  try {\n    // Get the transition bezier curve\n    var bezierCurve = getBezierCurve(tBC); // Get the progress of each frame state\n\n    var frameStateProgress = getFrameStateProgress(bezierCurve, frameNum); // If the recursion mode is not enabled or the state type is Number, the shallow state calculation is performed directly.\n\n    if (!deep || typeof endState === 'number') return getTransitionState(startState, endState, frameStateProgress);\n    return recursionTransitionState(startState, endState, frameStateProgress);\n  } catch (_unused) {\n    console.warn('Transition parameter may be abnormal!');\n    return [endState];\n  }\n}\n/**\r\n * @description Check if the parameters are legal\r\n * @param {String} tBC      Name of transition bezier curve\r\n * @param {Any} startState  Transition start state\r\n * @param {Any} endState    Transition end state\r\n * @param {Number} frameNum Number of transition frames\r\n * @return {Boolean} Is the parameter legal\r\n */\n\n\nfunction checkParams(tBC) {\n  var startState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var endState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var frameNum = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 30;\n\n  if (!tBC || startState === false || endState === false || !frameNum) {\n    console.error('transition: Missing Parameters!');\n    return false;\n  }\n\n  if ((0, _typeof2[\"default\"])(startState) !== (0, _typeof2[\"default\"])(endState)) {\n    console.error('transition: Inconsistent Status Types!');\n    return false;\n  }\n\n  var stateType = (0, _typeof2[\"default\"])(endState);\n\n  if (stateType === 'string' || stateType === 'boolean' || !tBC.length) {\n    console.error('transition: Unsupported Data Type of State!');\n    return false;\n  }\n\n  if (!_curves[\"default\"].has(tBC) && !(tBC instanceof Array)) {\n    console.warn('transition: Transition curve not found, default curve will be used!');\n  }\n\n  return true;\n}\n/**\r\n * @description Get the transition bezier curve\r\n * @param {String} tBC Name of transition bezier curve\r\n * @return {Array} Bezier curve data\r\n */\n\n\nfunction getBezierCurve(tBC) {\n  var bezierCurve = '';\n\n  if (_curves[\"default\"].has(tBC)) {\n    bezierCurve = _curves[\"default\"].get(tBC);\n  } else if (tBC instanceof Array) {\n    bezierCurve = tBC;\n  } else {\n    bezierCurve = _curves[\"default\"].get(defaultTransitionBC);\n  }\n\n  return bezierCurve;\n}\n/**\r\n * @description Get the progress of each frame state\r\n * @param {Array} bezierCurve Transition bezier curve\r\n * @param {Number} frameNum   Number of transition frames\r\n * @return {Array} Progress of each frame state\r\n */\n\n\nfunction getFrameStateProgress(bezierCurve, frameNum) {\n  var tMinus = 1 / (frameNum - 1);\n  var tState = new Array(frameNum).fill(0).map(function (t, i) {\n    return i * tMinus;\n  });\n  var frameState = tState.map(function (t) {\n    return getFrameStateFromT(bezierCurve, t);\n  });\n  return frameState;\n}\n/**\r\n * @description Get the progress of the corresponding frame according to t\r\n * @param {Array} bezierCurve Transition bezier curve\r\n * @param {Number} t          Current frame t\r\n * @return {Number} Progress of current frame\r\n */\n\n\nfunction getFrameStateFromT(bezierCurve, t) {\n  var tBezierCurvePoint = getBezierCurvePointFromT(bezierCurve, t);\n  var bezierCurvePointT = getBezierCurvePointTFromReT(tBezierCurvePoint, t);\n  return getBezierCurveTState(tBezierCurvePoint, bezierCurvePointT);\n}\n/**\r\n * @description Get the corresponding sub-curve according to t\r\n * @param {Array} bezierCurve Transition bezier curve\r\n * @param {Number} t          Current frame t\r\n * @return {Array} Sub-curve of t\r\n */\n\n\nfunction getBezierCurvePointFromT(bezierCurve, t) {\n  var lastIndex = bezierCurve.length - 1;\n  var begin = '',\n      end = '';\n  bezierCurve.findIndex(function (item, i) {\n    if (i === lastIndex) return;\n    begin = item;\n    end = bezierCurve[i + 1];\n    var currentMainPointX = begin[0][0];\n    var nextMainPointX = end[0][0];\n    return t >= currentMainPointX && t < nextMainPointX;\n  });\n  var p0 = begin[0];\n  var p1 = begin[2] || begin[0];\n  var p2 = end[1] || end[0];\n  var p3 = end[0];\n  return [p0, p1, p2, p3];\n}\n/**\r\n * @description Get local t based on t and sub-curve\r\n * @param {Array} bezierCurve Sub-curve\r\n * @param {Number} t          Current frame t\r\n * @return {Number} local t of sub-curve\r\n */\n\n\nfunction getBezierCurvePointTFromReT(bezierCurve, t) {\n  var reBeginX = bezierCurve[0][0];\n  var reEndX = bezierCurve[3][0];\n  var xMinus = reEndX - reBeginX;\n  var tMinus = t - reBeginX;\n  return tMinus / xMinus;\n}\n/**\r\n * @description Get the curve progress of t\r\n * @param {Array} bezierCurve Sub-curve\r\n * @param {Number} t          Current frame t\r\n * @return {Number} Progress of current frame\r\n */\n\n\nfunction getBezierCurveTState(_ref, t) {\n  var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 4),\n      _ref2$ = (0, _slicedToArray2[\"default\"])(_ref2[0], 2),\n      p0 = _ref2$[1],\n      _ref2$2 = (0, _slicedToArray2[\"default\"])(_ref2[1], 2),\n      p1 = _ref2$2[1],\n      _ref2$3 = (0, _slicedToArray2[\"default\"])(_ref2[2], 2),\n      p2 = _ref2$3[1],\n      _ref2$4 = (0, _slicedToArray2[\"default\"])(_ref2[3], 2),\n      p3 = _ref2$4[1];\n\n  var pow = Math.pow;\n  var tMinus = 1 - t;\n  var result1 = p0 * pow(tMinus, 3);\n  var result2 = 3 * p1 * t * pow(tMinus, 2);\n  var result3 = 3 * p2 * pow(t, 2) * tMinus;\n  var result4 = p3 * pow(t, 3);\n  return 1 - (result1 + result2 + result3 + result4);\n}\n/**\r\n * @description Get transition state according to frame progress\r\n * @param {Any} startState   Transition start state\r\n * @param {Any} endState     Transition end state\r\n * @param {Array} frameState Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\n\nfunction getTransitionState(begin, end, frameState) {\n  var stateType = 'object';\n  if (typeof begin === 'number') stateType = 'number';\n  if (begin instanceof Array) stateType = 'array';\n  if (stateType === 'number') return getNumberTransitionState(begin, end, frameState);\n  if (stateType === 'array') return getArrayTransitionState(begin, end, frameState);\n  if (stateType === 'object') return getObjectTransitionState(begin, end, frameState);\n  return frameState.map(function (t) {\n    return end;\n  });\n}\n/**\r\n * @description Get the transition data of the number type\r\n * @param {Number} startState Transition start state\r\n * @param {Number} endState   Transition end state\r\n * @param {Array} frameState  Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\n\nfunction getNumberTransitionState(begin, end, frameState) {\n  var minus = end - begin;\n  return frameState.map(function (s) {\n    return begin + minus * s;\n  });\n}\n/**\r\n * @description Get the transition data of the array type\r\n * @param {Array} startState Transition start state\r\n * @param {Array} endState   Transition end state\r\n * @param {Array} frameState Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\n\nfunction getArrayTransitionState(begin, end, frameState) {\n  var minus = end.map(function (v, i) {\n    if (typeof v !== 'number') return false;\n    return v - begin[i];\n  });\n  return frameState.map(function (s) {\n    return minus.map(function (v, i) {\n      if (v === false) return end[i];\n      return begin[i] + v * s;\n    });\n  });\n}\n/**\r\n * @description Get the transition data of the object type\r\n * @param {Object} startState Transition start state\r\n * @param {Object} endState   Transition end state\r\n * @param {Array} frameState  Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\n\nfunction getObjectTransitionState(begin, end, frameState) {\n  var keys = Object.keys(end);\n  var beginValue = keys.map(function (k) {\n    return begin[k];\n  });\n  var endValue = keys.map(function (k) {\n    return end[k];\n  });\n  var arrayState = getArrayTransitionState(beginValue, endValue, frameState);\n  return arrayState.map(function (item) {\n    var frameData = {};\n    item.forEach(function (v, i) {\n      return frameData[keys[i]] = v;\n    });\n    return frameData;\n  });\n}\n/**\r\n * @description Get the transition state data by recursion\r\n * @param {Array|Object} startState Transition start state\r\n * @param {Array|Object} endState   Transition end state\r\n * @param {Array} frameState        Frame state progress\r\n * @return {Array} Transition frame state\r\n */\n\n\nfunction recursionTransitionState(begin, end, frameState) {\n  var state = getTransitionState(begin, end, frameState);\n\n  var _loop = function _loop(key) {\n    var bTemp = begin[key];\n    var eTemp = end[key];\n    if ((0, _typeof2[\"default\"])(eTemp) !== 'object') return \"continue\";\n    var data = recursionTransitionState(bTemp, eTemp, frameState);\n    state.forEach(function (fs, i) {\n      return fs[key] = data[i];\n    });\n  };\n\n  for (var key in end) {\n    var _ret = _loop(key);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return state;\n}\n/**\r\n * @description Inject new curve into curves as config\r\n * @param {Any} key     The key of curve\r\n * @param {Array} curve Bezier curve data\r\n * @return {Undefined} No return\r\n */\n\n\nfunction injectNewCurve(key, curve) {\n  if (!key || !curve) {\n    console.error('InjectNewCurve Missing Parameters!');\n    return;\n  }\n\n  _curves[\"default\"].set(key, curve);\n}\n\nvar _default = transition;\nexports[\"default\"] = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}