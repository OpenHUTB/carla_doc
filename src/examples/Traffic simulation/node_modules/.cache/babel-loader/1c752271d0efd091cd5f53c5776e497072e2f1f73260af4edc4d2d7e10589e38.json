{"ast":null,"code":"import autoResize from '../../../mixin/autoResize.js';\nexport default {\n  name: 'DvFullScreenContainer',\n  mixins: [autoResize],\n  data() {\n    return {\n      ref: 'full-screen-container',\n      allWidth: 0,\n      scale: 0,\n      datavRoot: '',\n      ready: false\n    };\n  },\n  methods: {\n    afterAutoResizeMixinInit() {\n      const {\n        initConfig,\n        setAppScale\n      } = this;\n      initConfig();\n      setAppScale();\n      this.ready = true;\n    },\n    initConfig() {\n      const {\n        dom\n      } = this;\n      const {\n        width,\n        height\n      } = screen;\n      this.allWidth = width;\n      dom.style.width = `${width}px`;\n      dom.style.height = `${height}px`;\n    },\n    setAppScale() {\n      const {\n        allWidth,\n        dom\n      } = this;\n      const currentWidth = document.body.clientWidth;\n      dom.style.transform = `scale(${currentWidth / allWidth})`;\n    },\n    onResize() {\n      const {\n        setAppScale\n      } = this;\n      setAppScale();\n    }\n  }\n};","map":{"version":3,"names":["autoResize","name","mixins","data","ref","allWidth","scale","datavRoot","ready","methods","afterAutoResizeMixinInit","initConfig","setAppScale","dom","width","height","screen","style","currentWidth","document","body","clientWidth","transform","onResize"],"sources":["node_modules/@jiaminghi/data-view/lib/components/fullScreenContainer/src/main.vue"],"sourcesContent":["<template>\n  <div id=\"dv-full-screen-container\" :ref=\"ref\">\n    <template v-if=\"ready\">\n      <slot></slot>\n    </template>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize.js'\n\nexport default {\n  name: 'DvFullScreenContainer',\n  mixins: [autoResize],\n  data () {\n    return {\n      ref: 'full-screen-container',\n      allWidth: 0,\n      scale: 0,\n      datavRoot: '',\n      ready: false\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { initConfig, setAppScale } = this\n\n      initConfig()\n\n      setAppScale()\n\n      this.ready = true\n    },\n    initConfig () {\n      const { dom } = this\n      const { width, height } = screen\n\n      this.allWidth = width\n\n      dom.style.width = `${width}px`\n      dom.style.height = `${height}px`\n    },\n    setAppScale () {\n      const { allWidth, dom } = this\n\n      const currentWidth = document.body.clientWidth\n\n      dom.style.transform = `scale(${currentWidth / allWidth})`\n    },\n    onResize () {\n      const { setAppScale } = this\n\n      setAppScale()\n    }\n  }\n}\n</script>"],"mappings":"AASA,OAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAF,UAAA;EACAG,KAAA;IACA;MACAC,GAAA;MACAC,QAAA;MACAC,KAAA;MACAC,SAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,yBAAA;MACA;QAAAC,UAAA;QAAAC;MAAA;MAEAD,UAAA;MAEAC,WAAA;MAEA,KAAAJ,KAAA;IACA;IACAG,WAAA;MACA;QAAAE;MAAA;MACA;QAAAC,KAAA;QAAAC;MAAA,IAAAC,MAAA;MAEA,KAAAX,QAAA,GAAAS,KAAA;MAEAD,GAAA,CAAAI,KAAA,CAAAH,KAAA,MAAAA,KAAA;MACAD,GAAA,CAAAI,KAAA,CAAAF,MAAA,MAAAA,MAAA;IACA;IACAH,YAAA;MACA;QAAAP,QAAA;QAAAQ;MAAA;MAEA,MAAAK,YAAA,GAAAC,QAAA,CAAAC,IAAA,CAAAC,WAAA;MAEAR,GAAA,CAAAI,KAAA,CAAAK,SAAA,YAAAJ,YAAA,GAAAb,QAAA;IACA;IACAkB,SAAA;MACA;QAAAX;MAAA;MAEAA,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}