{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { enterEmphasis, leaveEmphasis, toggleHoverEmphasis, setStatesStylesFromModel } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isString, retrieve3 } from 'zrender/lib/core/util.js';\nvar SankeyPathShape = /** @class */function () {\n  function SankeyPathShape() {\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.cpx1 = 0;\n    this.cpy1 = 0;\n    this.cpx2 = 0;\n    this.cpy2 = 0;\n    this.extent = 0;\n  }\n  return SankeyPathShape;\n}();\nvar SankeyPath = /** @class */function (_super) {\n  __extends(SankeyPath, _super);\n  function SankeyPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n  SankeyPath.prototype.getDefaultShape = function () {\n    return new SankeyPathShape();\n  };\n  SankeyPath.prototype.buildPath = function (ctx, shape) {\n    var extent = shape.extent;\n    ctx.moveTo(shape.x1, shape.y1);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n    if (shape.orient === 'vertical') {\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n    ctx.closePath();\n  };\n  SankeyPath.prototype.highlight = function () {\n    enterEmphasis(this);\n  };\n  SankeyPath.prototype.downplay = function () {\n    leaveEmphasis(this);\n  };\n  return SankeyPath;\n}(graphic.Path);\nvar SankeyView = /** @class */function (_super) {\n  __extends(SankeyView, _super);\n  function SankeyView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = SankeyView.type;\n    _this._focusAdjacencyDisabled = false;\n    return _this;\n  }\n  SankeyView.prototype.render = function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    // view width\n    var width = layoutInfo.width;\n    // view height\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.x = layoutInfo.x;\n    group.y = layoutInfo.y;\n    // generate a bezire Curve for each edge\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyPath();\n      var ecData = getECData(curve);\n      ecData.dataIndex = edge.dataIndex;\n      ecData.seriesIndex = seriesModel.seriesIndex;\n      ecData.dataType = 'edge';\n      var edgeModel = edge.getModel();\n      var lineStyleModel = edgeModel.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.useStyle(lineStyleModel.getItemStyle());\n      // Special color, use source node color or target node color\n      applyCurveStyle(curve.style, orient, edge);\n      var defaultEdgeLabelText = \"\" + edgeModel.get('value');\n      var edgeLabelStateModels = getLabelStatesModels(edgeModel, 'edgeLabel');\n      setLabelStyle(curve, edgeLabelStateModels, {\n        labelFetcher: {\n          getFormattedLabel: function (dataIndex, stateName, dataType, labelDimIndex, formatter, extendParams) {\n            return seriesModel.getFormattedLabel(dataIndex, stateName, 'edge', labelDimIndex,\n            // ensure edgeLabel formatter is provided\n            // to prevent the inheritance from `label.formatter` of the series\n            retrieve3(formatter, edgeLabelStateModels.normal && edgeLabelStateModels.normal.get('formatter'), defaultEdgeLabelText), extendParams);\n          }\n        },\n        labelDataIndex: edge.dataIndex,\n        defaultText: defaultEdgeLabelText\n      });\n      curve.setTextConfig({\n        position: 'inside'\n      });\n      var emphasisModel = edgeModel.getModel('emphasis');\n      setStatesStylesFromModel(curve, edgeModel, 'lineStyle', function (model) {\n        var style = model.getItemStyle();\n        applyCurveStyle(style, orient, edge);\n        return style;\n      });\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(curve, focus === 'adjacency' ? edge.getAdjacentDataIndices() : focus === 'trajectory' ? edge.getTrajectoryDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    // Generate a rect for each node\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var emphasisModel = itemModel.getModel('emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle(),\n        z2: 10\n      });\n      setLabelStyle(rect, getLabelStatesModels(itemModel), {\n        labelFetcher: {\n          getFormattedLabel: function (dataIndex, stateName) {\n            return seriesModel.getFormattedLabel(dataIndex, stateName, 'node');\n          }\n        },\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id\n      });\n      rect.disableLabelAnimation = true;\n      rect.setStyle('fill', node.getVisual('color'));\n      rect.setStyle('decal', node.getVisual('style').decal);\n      setStatesStylesFromModel(rect, itemModel);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      getECData(rect).dataType = 'node';\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(rect, focus === 'adjacency' ? node.getAdjacentDataIndices() : focus === 'trajectory' ? node.getTrajectoryDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n    });\n    if (!this._data && seriesModel.isAnimationEnabled()) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n    this._data = seriesModel.getData();\n  };\n  SankeyView.prototype.dispose = function () {};\n  SankeyView.type = 'sankey';\n  return SankeyView;\n}(ChartView);\n/**\n * Special color, use source node color or target node color\n * @param curveProps curve's style to parse\n * @param orient direction\n * @param edge current curve data\n */\nfunction applyCurveStyle(curveProps, orient, edge) {\n  switch (curveProps.fill) {\n    case 'source':\n      curveProps.fill = edge.node1.getVisual('color');\n      curveProps.decal = edge.node1.getVisual('style').decal;\n      break;\n    case 'target':\n      curveProps.fill = edge.node2.getVisual('color');\n      curveProps.decal = edge.node2.getVisual('style').decal;\n      break;\n    case 'gradient':\n      var sourceColor = edge.node1.getVisual('color');\n      var targetColor = edge.node2.getVisual('color');\n      if (isString(sourceColor) && isString(targetColor)) {\n        curveProps.fill = new graphic.LinearGradient(0, 0, +(orient === 'horizontal'), +(orient === 'vertical'), [{\n          color: sourceColor,\n          offset: 0\n        }, {\n          color: targetColor,\n          offset: 1\n        }]);\n      }\n  }\n}\n// Add animation to the view\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\nexport default SankeyView;","map":{"version":3,"names":["__extends","graphic","enterEmphasis","leaveEmphasis","toggleHoverEmphasis","setStatesStylesFromModel","ChartView","setLabelStyle","getLabelStatesModels","getECData","isString","retrieve3","SankeyPathShape","x1","y1","x2","y2","cpx1","cpy1","cpx2","cpy2","extent","SankeyPath","_super","opts","call","prototype","getDefaultShape","buildPath","ctx","shape","moveTo","bezierCurveTo","orient","lineTo","closePath","highlight","downplay","Path","SankeyView","_this","apply","arguments","type","_focusAdjacencyDisabled","render","seriesModel","ecModel","api","sankeyView","graph","getGraph","group","layoutInfo","width","height","nodeData","getData","edgeData","get","_model","removeAll","x","y","eachEdge","edge","curve","ecData","dataIndex","seriesIndex","dataType","edgeModel","getModel","lineStyleModel","curvature","n1Layout","node1","getLayout","node1Model","dragX1","dragY1","n2Layout","node2","node2Model","dragX2","dragY2","edgeLayout","Math","max","dy","sy","ty","dx","setShape","useStyle","getItemStyle","applyCurveStyle","style","defaultEdgeLabelText","edgeLabelStateModels","labelFetcher","getFormattedLabel","stateName","labelDimIndex","formatter","extendParams","normal","labelDataIndex","defaultText","setTextConfig","position","emphasisModel","model","add","setItemGraphicEl","focus","getAdjacentDataIndices","getTrajectoryDataIndices","eachNode","node","layout","itemModel","dragX","dragY","rect","Rect","z2","id","disableLabelAnimation","setStyle","getVisual","decal","eachItemGraphicEl","el","getItemModel","drift","dirty","dispatchAction","seriesId","getRawIndex","localX","localY","ondragend","draggable","cursor","_data","isAnimationEnabled","setClipPath","createGridClipShape","getBoundingRect","removeClipPath","dispose","curveProps","fill","sourceColor","targetColor","LinearGradient","color","offset","cb","rectEl","initProps"],"sources":["D:/doc/workplace/vscode/Traffic simulation/node_modules/echarts/lib/chart/sankey/SankeyView.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { enterEmphasis, leaveEmphasis, toggleHoverEmphasis, setStatesStylesFromModel } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isString, retrieve3 } from 'zrender/lib/core/util.js';\nvar SankeyPathShape = /** @class */function () {\n  function SankeyPathShape() {\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.cpx1 = 0;\n    this.cpy1 = 0;\n    this.cpx2 = 0;\n    this.cpy2 = 0;\n    this.extent = 0;\n  }\n  return SankeyPathShape;\n}();\nvar SankeyPath = /** @class */function (_super) {\n  __extends(SankeyPath, _super);\n  function SankeyPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n  SankeyPath.prototype.getDefaultShape = function () {\n    return new SankeyPathShape();\n  };\n  SankeyPath.prototype.buildPath = function (ctx, shape) {\n    var extent = shape.extent;\n    ctx.moveTo(shape.x1, shape.y1);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n    if (shape.orient === 'vertical') {\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n    ctx.closePath();\n  };\n  SankeyPath.prototype.highlight = function () {\n    enterEmphasis(this);\n  };\n  SankeyPath.prototype.downplay = function () {\n    leaveEmphasis(this);\n  };\n  return SankeyPath;\n}(graphic.Path);\nvar SankeyView = /** @class */function (_super) {\n  __extends(SankeyView, _super);\n  function SankeyView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = SankeyView.type;\n    _this._focusAdjacencyDisabled = false;\n    return _this;\n  }\n  SankeyView.prototype.render = function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    // view width\n    var width = layoutInfo.width;\n    // view height\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.x = layoutInfo.x;\n    group.y = layoutInfo.y;\n    // generate a bezire Curve for each edge\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyPath();\n      var ecData = getECData(curve);\n      ecData.dataIndex = edge.dataIndex;\n      ecData.seriesIndex = seriesModel.seriesIndex;\n      ecData.dataType = 'edge';\n      var edgeModel = edge.getModel();\n      var lineStyleModel = edgeModel.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.useStyle(lineStyleModel.getItemStyle());\n      // Special color, use source node color or target node color\n      applyCurveStyle(curve.style, orient, edge);\n      var defaultEdgeLabelText = \"\" + edgeModel.get('value');\n      var edgeLabelStateModels = getLabelStatesModels(edgeModel, 'edgeLabel');\n      setLabelStyle(curve, edgeLabelStateModels, {\n        labelFetcher: {\n          getFormattedLabel: function (dataIndex, stateName, dataType, labelDimIndex, formatter, extendParams) {\n            return seriesModel.getFormattedLabel(dataIndex, stateName, 'edge', labelDimIndex,\n            // ensure edgeLabel formatter is provided\n            // to prevent the inheritance from `label.formatter` of the series\n            retrieve3(formatter, edgeLabelStateModels.normal && edgeLabelStateModels.normal.get('formatter'), defaultEdgeLabelText), extendParams);\n          }\n        },\n        labelDataIndex: edge.dataIndex,\n        defaultText: defaultEdgeLabelText\n      });\n      curve.setTextConfig({\n        position: 'inside'\n      });\n      var emphasisModel = edgeModel.getModel('emphasis');\n      setStatesStylesFromModel(curve, edgeModel, 'lineStyle', function (model) {\n        var style = model.getItemStyle();\n        applyCurveStyle(style, orient, edge);\n        return style;\n      });\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(curve, focus === 'adjacency' ? edge.getAdjacentDataIndices() : focus === 'trajectory' ? edge.getTrajectoryDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    // Generate a rect for each node\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var emphasisModel = itemModel.getModel('emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle(),\n        z2: 10\n      });\n      setLabelStyle(rect, getLabelStatesModels(itemModel), {\n        labelFetcher: {\n          getFormattedLabel: function (dataIndex, stateName) {\n            return seriesModel.getFormattedLabel(dataIndex, stateName, 'node');\n          }\n        },\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id\n      });\n      rect.disableLabelAnimation = true;\n      rect.setStyle('fill', node.getVisual('color'));\n      rect.setStyle('decal', node.getVisual('style').decal);\n      setStatesStylesFromModel(rect, itemModel);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      getECData(rect).dataType = 'node';\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(rect, focus === 'adjacency' ? node.getAdjacentDataIndices() : focus === 'trajectory' ? node.getTrajectoryDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n    });\n    if (!this._data && seriesModel.isAnimationEnabled()) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n    this._data = seriesModel.getData();\n  };\n  SankeyView.prototype.dispose = function () {};\n  SankeyView.type = 'sankey';\n  return SankeyView;\n}(ChartView);\n/**\n * Special color, use source node color or target node color\n * @param curveProps curve's style to parse\n * @param orient direction\n * @param edge current curve data\n */\nfunction applyCurveStyle(curveProps, orient, edge) {\n  switch (curveProps.fill) {\n    case 'source':\n      curveProps.fill = edge.node1.getVisual('color');\n      curveProps.decal = edge.node1.getVisual('style').decal;\n      break;\n    case 'target':\n      curveProps.fill = edge.node2.getVisual('color');\n      curveProps.decal = edge.node2.getVisual('style').decal;\n      break;\n    case 'gradient':\n      var sourceColor = edge.node1.getVisual('color');\n      var targetColor = edge.node2.getVisual('color');\n      if (isString(sourceColor) && isString(targetColor)) {\n        curveProps.fill = new graphic.LinearGradient(0, 0, +(orient === 'horizontal'), +(orient === 'vertical'), [{\n          color: sourceColor,\n          offset: 0\n        }, {\n          color: targetColor,\n          offset: 1\n        }]);\n      }\n  }\n}\n// Add animation to the view\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\nexport default SankeyView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}