{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      xData: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\n      //横坐标\n      yData: [23, 24, 18, 25, 27, 28, 25],\n      //人数数据\n      taskDate: [10, 11, 9, 17, 14, 13, 14],\n      myChartStyle: {\n        float: \"left\",\n        width: \"100%\",\n        height: \"200px\"\n      } //图表样式\n    };\n  },\n  mounted() {\n    this.initEcharts();\n  },\n  methods: {\n    initEcharts() {\n      // 多列柱状图\n      const option = {\n        xAxis: {\n          data: this.xData\n        },\n        // 图例\n        legend: {\n          data: [\"机动车\", \"非机动车\"],\n          top: \"0%\"\n        },\n        yAxis: {},\n        series: [{\n          type: \"bar\",\n          //形状为柱状图\n          data: this.yData,\n          name: \"机动车\",\n          // legend属性\n          label: {\n            // 柱状图上方文本标签，默认展示数值信息\n            show: true,\n            position: \"top\"\n          }\n        }, {\n          type: \"bar\",\n          //形状为柱状图\n          data: this.taskDate,\n          name: \"非机动车\",\n          // legend属性\n          label: {\n            // 柱状图上方文本标签，默认展示数值信息\n            show: true,\n            position: \"top\"\n          }\n        }]\n      };\n      const myChart = echarts.init(this.$refs.mychart); // 图标初始化\n      myChart.setOption(option); // 渲染页面\n      //随着屏幕大小调节图表\n      window.addEventListener(\"resize\", () => {\n        myChart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","data","xData","yData","taskDate","myChartStyle","float","width","height","mounted","initEcharts","methods","option","xAxis","legend","top","yAxis","series","type","name","label","show","position","myChart","init","$refs","mychart","setOption","window","addEventListener","resize"],"sources":["src/components/RightComponent/TrafficFlow.vue"],"sourcesContent":["<template>\r\n  <div style=\"display: block\">\r\n    <div class=\"background-div\">7日交通流量</div>\r\n      <div\r\n        class=\"echart\"\r\n        ref=\"mychart\"\r\n        id=\"mychart\"\r\n        :style=\"myChartStyle\">\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.el-dropdown-link {\r\n  cursor: pointer;\r\n  color: #409eff;\r\n}\r\n.el-icon-arrow-down {\r\n  font-size: 12px;\r\n}\r\n.background-div {\r\n  background-image: url(\"../../assets/small.png\");\r\n  background-size: cover;\r\n  background-position: center;\r\n  text-indent: 3.5em;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      xData: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"], //横坐标\r\n      yData: [23, 24, 18, 25, 27, 28, 25], //人数数据\r\n      taskDate: [10, 11, 9, 17, 14, 13, 14],\r\n      myChartStyle: { float: \"left\", width: \"100%\", height: \"200px\" }, //图表样式\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initEcharts();\r\n  },\r\n  methods: {\r\n    initEcharts() {\r\n      // 多列柱状图\r\n      const option = {\r\n        xAxis: {\r\n          data: this.xData,\r\n        },\r\n        // 图例\r\n        legend: {\r\n          data: [\"机动车\", \"非机动车\"],\r\n          top: \"0%\",\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            type: \"bar\", //形状为柱状图\r\n            data: this.yData,\r\n            name: \"机动车\", // legend属性\r\n            label: {\r\n              // 柱状图上方文本标签，默认展示数值信息\r\n              show: true,\r\n              position: \"top\",\r\n            },\r\n          },\r\n          {\r\n            type: \"bar\", //形状为柱状图\r\n            data: this.taskDate,\r\n            name: \"非机动车\", // legend属性\r\n            label: {\r\n              // 柱状图上方文本标签，默认展示数值信息\r\n              show: true,\r\n              position: \"top\",\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      const myChart = echarts.init(this.$refs.mychart); // 图标初始化\r\n      myChart.setOption(option); // 渲染页面\r\n      //随着屏幕大小调节图表\r\n      window.addEventListener(\"resize\", () => {\r\n        myChart.resize();\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AA6BA,YAAAA,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;MAAA;MACAC,KAAA;MAAA;MACAC,QAAA;MACAC,YAAA;QAAAC,KAAA;QAAAC,KAAA;QAAAC,MAAA;MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAD,YAAA;MACA;MACA,MAAAE,MAAA;QACAC,KAAA;UACAZ,IAAA,OAAAC;QACA;QACA;QACAY,MAAA;UACAb,IAAA;UACAc,GAAA;QACA;QACAC,KAAA;QACAC,MAAA,GACA;UACAC,IAAA;UAAA;UACAjB,IAAA,OAAAE,KAAA;UACAgB,IAAA;UAAA;UACAC,KAAA;YACA;YACAC,IAAA;YACAC,QAAA;UACA;QACA,GACA;UACAJ,IAAA;UAAA;UACAjB,IAAA,OAAAG,QAAA;UACAe,IAAA;UAAA;UACAC,KAAA;YACA;YACAC,IAAA;YACAC,QAAA;UACA;QACA;MAEA;MACA,MAAAC,OAAA,GAAAvB,OAAA,CAAAwB,IAAA,MAAAC,KAAA,CAAAC,OAAA;MACAH,OAAA,CAAAI,SAAA,CAAAf,MAAA;MACA;MACAgB,MAAA,CAAAC,gBAAA;QACAN,OAAA,CAAAO,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}