{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      myChart: {},\n      xData: [\"0:00\", \"4:00\", \"8:00\", \"12:00\", \"16:00\", \"20:00\"],\n      //横坐标\n      yyyData: [10, 20, 30],\n      yData: [23, 24, 18, 25, 27, 28],\n      taskData: [20, 19, 19, 20, 20, 21],\n      myChartStyle: {\n        float: \"left\",\n        width: \"100%\",\n        height: \"400px\"\n      } //图表样式\n    };\n  },\n  mounted() {\n    this.initEcharts();\n  },\n  methods: {\n    initEcharts() {\n      const option = {\n        title: {\n          text: 'Basic Radar Chart'\n        },\n        legend: {\n          data: ['Allocated Budget', 'Actual Spending']\n        },\n        radar: {\n          // shape: 'circle',\n          indicator: [{\n            name: 'Sales',\n            max: 6500\n          }, {\n            name: 'Administration',\n            max: 16000\n          }, {\n            name: 'Information Technology',\n            max: 30000\n          }, {\n            name: 'Customer Support',\n            max: 38000\n          }, {\n            name: 'Development',\n            max: 52000\n          }, {\n            name: 'Marketing',\n            max: 25000\n          }]\n        },\n        series: [{\n          name: 'Budget vs spending',\n          type: 'radar',\n          data: [{\n            value: [4200, 3000, 20000, 35000, 50000, 18000],\n            name: 'Allocated Budget'\n          }, {\n            value: [5000, 14000, 28000, 26000, 42000, 21000],\n            name: 'Actual Spending'\n          }]\n        }]\n      };\n      const myChart = echarts.init(this.$refs.mychart);\n      myChart.setOption(option);\n      //随着屏幕大小调节图表\n      window.addEventListener(\"resize\", () => {\n        myChart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","data","myChart","xData","yyyData","yData","taskData","myChartStyle","float","width","height","mounted","initEcharts","methods","option","title","text","legend","radar","indicator","name","max","series","type","value","init","$refs","mychart","setOption","window","addEventListener","resize"],"sources":["src/components/RightComponent/PredictionComparison/Comparison.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"background-div02\" style=\"\">\r\n        <span style=\"color: rgb(0, 170, 255);\">|</span> <span style=\"color: rgb(172, 172, 172);\">未来24小时拥堵趋势预测</span>\r\n        </div>\r\n      <div\r\n        class=\"echart\"\r\n        ref=\"mychart\"\r\n        id=\"mychart\"\r\n        :style=\"myChartStyle\">\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n/* .background-div {\r\n  background-image: url(\"../../assets/small.png\");\r\n  background-size: cover;\r\n  background-position: center;\r\n  text-indent: 3.5em;\r\n} */\r\n</style>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      myChart: {},\r\n      xData: [\"0:00\", \"4:00\", \"8:00\", \"12:00\", \"16:00\", \"20:00\"], //横坐标\r\n      yyyData: [10,20,30],\r\n\r\n      yData: [23, 24, 18, 25, 27, 28], \r\n      taskData: [20, 19, 19, 20, 20, 21], \r\n      myChartStyle: { float: \"left\", width: \"100%\", height: \"400px\" } //图表样式\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initEcharts();\r\n  },\r\n  methods: {\r\n    initEcharts() {\r\n      const option = {\r\n  title: {\r\n    text: 'Basic Radar Chart'\r\n  },\r\n  legend: {\r\n    data: ['Allocated Budget', 'Actual Spending']\r\n  },\r\n  radar: {\r\n    // shape: 'circle',\r\n    indicator: [\r\n      { name: 'Sales', max: 6500 },\r\n      { name: 'Administration', max: 16000 },\r\n      { name: 'Information Technology', max: 30000 },\r\n      { name: 'Customer Support', max: 38000 },\r\n      { name: 'Development', max: 52000 },\r\n      { name: 'Marketing', max: 25000 }\r\n    ]\r\n  },\r\n  series: [\r\n    {\r\n      name: 'Budget vs spending',\r\n      type: 'radar',\r\n      data: [\r\n        {\r\n          value: [4200, 3000, 20000, 35000, 50000, 18000],\r\n          name: 'Allocated Budget'\r\n        },\r\n        {\r\n          value: [5000, 14000, 28000, 26000, 42000, 21000],\r\n          name: 'Actual Spending'\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n      const myChart = echarts.init(this.$refs.mychart);\r\n      myChart.setOption(option);\r\n      //随着屏幕大小调节图表\r\n      window.addEventListener(\"resize\", () => {\r\n        myChart.resize();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AAwBA,YAAAA,OAAA;AAGA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;MAAA;MACAC,OAAA;MAEAC,KAAA;MACAC,QAAA;MACAC,YAAA;QAAAC,KAAA;QAAAC,KAAA;QAAAC,MAAA;MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAD,YAAA;MACA,MAAAE,MAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,MAAA;UACAhB,IAAA;QACA;QACAiB,KAAA;UACA;UACAC,SAAA,GACA;YAAAC,IAAA;YAAAC,GAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,GAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,GAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,GAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,GAAA;UAAA,GACA;YAAAD,IAAA;YAAAC,GAAA;UAAA;QAEA;QACAC,MAAA,GACA;UACAF,IAAA;UACAG,IAAA;UACAtB,IAAA,GACA;YACAuB,KAAA;YACAJ,IAAA;UACA,GACA;YACAI,KAAA;YACAJ,IAAA;UACA;QAEA;MAEA;MACA,MAAAlB,OAAA,GAAAF,OAAA,CAAAyB,IAAA,MAAAC,KAAA,CAAAC,OAAA;MACAzB,OAAA,CAAA0B,SAAA,CAAAd,MAAA;MACA;MACAe,MAAA,CAAAC,gBAAA;QACA5B,OAAA,CAAA6B,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}