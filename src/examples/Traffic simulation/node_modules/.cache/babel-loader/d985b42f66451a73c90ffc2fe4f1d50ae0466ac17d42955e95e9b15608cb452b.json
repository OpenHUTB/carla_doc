{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      myChart: {},\n      xData: [\"0:00\", \"4:00\", \"8:00\", \"12:00\", \"16:00\", \"20:00\"],\n      //横坐标\n      yyyData: [10, 20, 30],\n      yData: [23, 24, 18, 25, 27, 28],\n      taskData: [20, 19, 19, 20, 20, 21],\n      myChartStyle: {\n        float: \"left\",\n        width: \"100%\",\n        height: \"400px\"\n      } //图表样式\n    };\n  },\n  mounted() {\n    this.initEcharts();\n  },\n  methods: {\n    initEcharts() {\n      const option = {\n        xAxis: {\n          data: this.xData\n        },\n        yAxis: {\n          type: 'value',\n          min: 0,\n          max: 30,\n          interval: 10\n        },\n        itemStyle: {\n          normal: {\n            color: '#fff',\n            fontSize: 14,\n            lineStyle: {\n              width: 3,\n              //折线宽度\n\n              //折线颜色渐变\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: 'rgba(45,105,249,1)'\n              }, {\n                offset: 1,\n                color: 'rgba(89,205,253,1)'\n              }])\n            }\n          }\n        },\n        series: [{\n          name: \"车均延误\",\n          data: this.yData,\n          type: \"line\",\n          // 类型设置为折线图\n          smooth: true,\n          label: {\n            show: true,\n            position: \"top\",\n            textStyle: {\n              fontSize: 16\n            }\n          }\n        }, {\n          name: \"平均延误\",\n          data: this.taskData,\n          type: \"line\",\n          // 类型设置为折线图\n          smooth: true,\n          label: {\n            show: true,\n            position: \"bottom\",\n            textStyle: {\n              fontSize: 16\n            }\n          }\n        }]\n      };\n      const myChart = echarts.init(this.$refs.mychart);\n      myChart.setOption(option);\n      //随着屏幕大小调节图表\n      window.addEventListener(\"resize\", () => {\n        myChart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","data","myChart","xData","yyyData","yData","taskData","myChartStyle","float","width","height","mounted","initEcharts","methods","option","xAxis","yAxis","type","min","max","interval","itemStyle","normal","color","fontSize","lineStyle","graphic","LinearGradient","offset","series","name","smooth","label","show","position","textStyle","init","$refs","mychart","setOption","window","addEventListener","resize"],"sources":["src/components/RightComponent/TrafficDelay.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"background-div\">车均延误</div>\r\n      <div\r\n        class=\"echart\"\r\n        ref=\"mychart\"\r\n        id=\"mychart\"\r\n        :style=\"myChartStyle\">\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<style>\r\n.background-div {\r\n  background-image: url(\"../../assets/small.png\");\r\n  background-size: cover;\r\n  background-position: center;\r\n  text-indent: 3.5em;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      myChart: {},\r\n      xData: [\"0:00\", \"4:00\", \"8:00\", \"12:00\", \"16:00\", \"20:00\"], //横坐标\r\n      yyyData: [10,20,30],\r\n\r\n      yData: [23, 24, 18, 25, 27, 28], \r\n      taskData: [20, 19, 19, 20, 20, 21], \r\n      myChartStyle: { float: \"left\", width: \"100%\", height: \"400px\" } //图表样式\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initEcharts();\r\n  },\r\n  methods: {\r\n    initEcharts() {\r\n      const option = {\r\n        xAxis: {\r\n          data: this.xData\r\n        },\r\n        yAxis: {\r\n          type:'value',\r\n          min: 0,\r\n          max: 30,\r\n          interval: 10,\r\n        },\r\n        itemStyle: {\r\n          normal: {\r\n              color: '#fff',\r\n              fontSize: 14,\r\n              lineStyle:{\r\n                  width:3, //折线宽度\r\n\r\n                //折线颜色渐变\r\n                  color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\r\n                  offset: 0,\r\n                  color: 'rgba(45,105,249,1)'\r\n                  }, \r\n                  {\r\n                      offset: 1,\r\n                      color: 'rgba(89,205,253,1)'\r\n                  }])\r\n              }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: \"车均延误\",\r\n            data: this.yData,\r\n            type: \"line\", // 类型设置为折线图\r\n            smooth: true,\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n              textStyle: {\r\n                fontSize: 16\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: \"平均延误\",\r\n            data: this.taskData,\r\n            type: \"line\", // 类型设置为折线图\r\n            smooth: true,\r\n            label: {\r\n              show: true,\r\n              position: \"bottom\",\r\n              textStyle: {\r\n                fontSize: 16\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      const myChart = echarts.init(this.$refs.mychart);\r\n      myChart.setOption(option);\r\n      //随着屏幕大小调节图表\r\n      window.addEventListener(\"resize\", () => {\r\n        myChart.resize();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"AAsBA,YAAAA,OAAA;AAGA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;MAAA;MACAC,OAAA;MAEAC,KAAA;MACAC,QAAA;MACAC,YAAA;QAAAC,KAAA;QAAAC,KAAA;QAAAC,MAAA;MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACAD,YAAA;MACA,MAAAE,MAAA;QACAC,KAAA;UACAd,IAAA,OAAAE;QACA;QACAa,KAAA;UACAC,IAAA;UACAC,GAAA;UACAC,GAAA;UACAC,QAAA;QACA;QACAC,SAAA;UACAC,MAAA;YACAC,KAAA;YACAC,QAAA;YACAC,SAAA;cACAhB,KAAA;cAAA;;cAEA;cACAc,KAAA,MAAAvB,OAAA,CAAA0B,OAAA,CAAAC,cAAA;gBACAC,MAAA;gBACAL,KAAA;cACA,GACA;gBACAK,MAAA;gBACAL,KAAA;cACA;YACA;UACA;QACA;QACAM,MAAA,GACA;UACAC,IAAA;UACA7B,IAAA,OAAAI,KAAA;UACAY,IAAA;UAAA;UACAc,MAAA;UACAC,KAAA;YACAC,IAAA;YACAC,QAAA;YACAC,SAAA;cACAX,QAAA;YACA;UACA;QACA,GACA;UACAM,IAAA;UACA7B,IAAA,OAAAK,QAAA;UACAW,IAAA;UAAA;UACAc,MAAA;UACAC,KAAA;YACAC,IAAA;YACAC,QAAA;YACAC,SAAA;cACAX,QAAA;YACA;UACA;QACA;MAEA;MACA,MAAAtB,OAAA,GAAAF,OAAA,CAAAoC,IAAA,MAAAC,KAAA,CAAAC,OAAA;MACApC,OAAA,CAAAqC,SAAA,CAAAzB,MAAA;MACA;MACA0B,MAAA,CAAAC,gBAAA;QACAvC,OAAA,CAAAwC,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}